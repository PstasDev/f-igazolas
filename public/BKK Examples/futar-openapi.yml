openapi: 3.0.1
info:
  description: Specification for the realCity Query Server API.
  title: realCity Query Server API
  version: 1.0.1
servers:
  - description: BKK FUTÁR
    url: https://futar.bkk.hu/api/query/v1/ws
security:
  - ApiKeyQuery: []
paths:
  /{dialect}/api/where/alert-details:
    get:
      operationId: getAlertDetails
      parameters:
        - description: A lekért zavar azonosítója.
          example: BKK_máv-start-5518498
          in: query
          name: alertId
          required: true
          schema:
            $ref: "#/components/schemas/AgencyAndId"
        - description: Az API verziója.
          example: 2
          in: query
          name: version
          schema:
            $ref: "#/components/schemas/ApiVersion"
        - description: A kliensalkalmazás verziója.
          example: 1.1.abc
          in: query
          name: appVersion
          schema:
            type: string
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
        - description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül.
          explode: false
          in: query
          name: includeReferences
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ReferencesSchema"
          style: form
        - description: Ha igaz, akkor az útvonalhoz tartozó kapcsolódó útvonalak is szerepelnek a válaszban.
          example: false
          in: query
          name: related
          schema:
            type: boolean
            default: false
        - description: Az aktív zavarok lekéréséhez használt dátum. Alapértelmezett értéke az aktuális nap.
          example: 20210707
          in: query
          name: date
          schema:
            $ref: "#/components/schemas/ServiceDate"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertDetailsMethodResponse"
          description: Visszaadja a zavar által érintett összes járat részleteit.
        "404":
          description: Ismeretlen zavar azonosító.
  /{dialect}/api/where/alert-search:
    get:
      operationId: searchAlerts
      parameters:
        - description: Az API verziója.
          example: 2
          in: query
          name: version
          schema:
            $ref: "#/components/schemas/ApiVersion"
        - description: A kliensalkalmazás verziója.
          example: 1.1.abc
          in: query
          name: appVersion
          schema:
            type: string
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
        - description: A keresési időintervallum vége epoch másodpercben.
          example: 1625695260
          in: query
          name: end
          schema:
            type: integer
            format: int64
        - description: Kiszűri az aktuális idő előtt lezárult zavarokat.
          example: true
          in: query
          name: filterClosed
          schema:
            type: boolean
            default: true
        - description: A zavar listához szűri meg a zavarokat.
          example: true
          in: query
          name: listView
          schema:
            type: boolean
        - description: A visszaadott elemek minimális száma.
          example: 5
          in: query
          name: minResult
          schema:
            type: integer
            format: int32
            default: 5
        - description: A keresési feltétel, amit a zavar fejlécével, leírásával, vagy azonosítójával illesztünk.
          example: BKK_bkkinfo-75694
          in: query
          name: query
          schema:
            type: string
        - description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül.
          explode: false
          in: query
          name: includeReferences
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ReferencesSchema"
          style: form
        - description: A keresés időintervallumának eleje epoch másodpercben.
          example: 1625695260
          in: query
          name: start
          schema:
            type: integer
            format: int64
        - description: A lekérdezés kiértékeléséhez használt időpont. Alapértelmezetten az aktuális szerveridő.
          example: 1625740980
          in: query
          name: time
          schema:
            type: integer
            format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertSearchMethodResponse"
          description: Visszatér a `query` paraméterben megadott keresési feltételnek megfelelő zavarokkal, amik aktívak a megadott időintervallumnban.
  /{dialect}/api/where/arrivals-and-departures-for-location:
    get:
      operationId: getArrivalsAndDeparturesForLocation
      parameters:
        - description: Az API verziója.
          example: 2
          in: query
          name: version
          schema:
            $ref: "#/components/schemas/ApiVersion"
        - description: A kliensalkalmazás verziója.
          example: 1.1.abc
          in: query
          name: appVersion
          schema:
            type: string
        - description: A kliens szélességi koordinátája.
          example: 47.47375
          in: query
          name: clientLat
          schema:
            type: number
            format: double
            default: 0
        - description: A kliens hosszúsági koordinátája.
          example: 19.049086
          in: query
          name: clientLon
          schema:
            type: number
            format: double
            default: 0
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
        - description: Az indulásokat a megadott viszonylat módja szerint szűri.
          example: BUS
          explode: false
          in: query
          name: excludeRouteTypes
          schema:
            type: array
            items:
              $ref: "#/components/schemas/TraverseMode"
          style: form
        - description: Menetrendi adatok maximális száma egy csoportban.
          example: 2
          in: query
          name: groupLimit
          schema:
            type: integer
            format: int32
            default: 4
        - description: Amikor lehetséges, mindegyik azonosítóhoz legalább egy indulás/érkezés visszaadásra kerül.
          example: BKK_VP06,BKK_0090
          in: query
          name: includeRouteId
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AgencyAndId"
        - description: Az indulásokat a megadott viszonylat módja szerint szűri.
          example: BUS
          explode: false
          in: query
          name: includeRouteTypes
          schema:
            type: array
            items:
              $ref: "#/components/schemas/TraverseMode"
          style: form
        - description: A menethez társított járművek kitöltése a válaszban
          example: false
          in: query
          name: includeVehicleFromTrip
          schema:
            type: boolean
        - description: A megállóhely induláshoz tartozó elem a jármű fordán lévő járművel legyen bővítve.
          example: false
          in: query
          name: includeVehicleFromVehicleBlock
          schema:
            type: boolean
        - description: A helyszín középpontjának szélessgéi koordinátája.
          example: 47.4973131430789
          in: query
          name: lat
          schema:
            type: number
            format: float
        - description: "A lekérési terület szélességi íve. (Terület szélessége: `lat +/- latspan`)."
          example: 0.013365429598373169
          in: query
          name: latSpan
          schema:
            type: number
            format: float
        - description: A visszaadott indulási és érkezési idők listájának maximális hossza.
          example: 60
          in: query
          name: limit
          schema:
            type: integer
            format: int32
            default: 60
        - description: A helyszín középpontjának hosszúsági koordinátája.
          example: 19.064639534671457
          in: query
          name: lon
          schema:
            type: number
            format: float
        - description: "A lekérési terület hosszúsági íve. (Terület hosszúsága: `lon +/- lonSpan`)."
          example: 0.032126676908724505
          in: query
          name: lonSpan
          schema:
            type: number
            format: float
        - description: A visszaadott elemek minimális száma.
          example: 5
          in: query
          name: minResult
          schema:
            type: integer
            format: int32
            default: 5
        - description: A lekérdezési időablak a `time` paraméter után ennyi perccel ér véget.
          example: 30
          in: query
          name: minutesAfter
          schema:
            type: integer
            format: int32
            default: 30
        - description: A lekérdezési időablak a `time` paraméter előtt ennyi perccel indul.
          example: 2
          in: query
          name: minutesBefore
          schema:
            type: integer
            format: int32
            default: 2
        - deprecated: true
          description: Ha igaz akkor csak az érkezési (és előrejelzett érkezési) idők nem szerepelnek a válaszban.
          example: false
          in: query
          name: onlyDepartures
          schema:
            type: boolean
            default: true
        - description: A válasz szűrésére használt keresési kifejezés.
          in: query
          name: query
          schema:
            type: string
        - description: Ha a `latSpan` vagy a `longSpan` nincs kitöltve, a keresési terület a középpontól számított `radius` méter távolság mind a négy irányban.
          example: 100
          in: query
          name: radius
          schema:
            type: integer
            format: int32
            default: 100
        - description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül.
          explode: false
          in: query
          name: includeReferences
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ReferencesSchema"
          style: form
        - description: A megállók azonosítóinak listája, amelyekhez a lekérést végezzük.
          example: BKK_F01029,BKK_F01029
          in: query
          name: stopId
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AgencyAndId"
        - description: A visszaadott bejegyzések típusa.
          example: ARRIVAL_AND_DEPARTURE
          in: query
          name: stopTimeType
          schema:
            $ref: "#/components/schemas/StopTimeType"
        - description: A lekérdezés kiértékeléséhez használt időpont. Alapértelmezetten az aktuális szerveridő.
          example: 1625740980
          in: query
          name: time
          schema:
            type: integer
            format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrivalsAndDeparturesForLocationOTPMethodResponse"
          description: Visszaadja egy területhez tartozó érkezési és indulási időket járatazonosítók és célállomások szerint csoportosítva.
  /{dialect}/api/where/arrivals-and-departures-for-stop:
    get:
      operationId: getArrivalsAndDeparturesForStop
      parameters:
        - description: Az API verziója.
          example: 2
          in: query
          name: version
          schema:
            $ref: "#/components/schemas/ApiVersion"
        - description: A kliensalkalmazás verziója.
          example: 1.1.abc
          in: query
          name: appVersion
          schema:
            type: string
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
        - description: Az indulásokat a megadott viszonylat módja szerint szűri.
          example: BUS
          explode: false
          in: query
          name: excludeRouteTypes
          schema:
            type: array
            items:
              $ref: "#/components/schemas/TraverseMode"
          style: form
        - description: Amikor lehetséges, mindegyik azonosítóhoz legalább egy indulás/érkezés visszaadásra kerül.
          example: BKK_VP06,BKK_0090
          in: query
          name: includeRouteId
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AgencyAndId"
        - description: Az indulásokat a megadott viszonylat módja szerint szűri.
          example: BUS
          explode: false
          in: query
          name: includeRouteTypes
          schema:
            type: array
            items:
              $ref: "#/components/schemas/TraverseMode"
          style: form
        - description: A menethez társított járművek kitöltése a válaszban
          example: false
          in: query
          name: includeVehicleFromTrip
          schema:
            type: boolean
        - description: A megállóhely induláshoz tartozó elem a jármű fordán lévő járművel legyen bővítve.
          example: false
          in: query
          name: includeVehicleFromVehicleBlock
          schema:
            type: boolean
        - description: A helyszín középpontjának szélessgéi koordinátája.
          example: 47.4973131430789
          in: query
          name: lat
          schema:
            type: number
            format: float
        - description: "A lekérési terület szélességi íve. (Terület szélessége: `lat +/- latspan`)."
          example: 0.013365429598373169
          in: query
          name: latSpan
          schema:
            type: number
            format: float
        - description: A visszaadott indulási és érkezési idők listájának maximális hossza.
          example: 60
          in: query
          name: limit
          schema:
            type: integer
            format: int32
            default: 60
        - description: A helyszín középpontjának hosszúsági koordinátája.
          example: 19.064639534671457
          in: query
          name: lon
          schema:
            type: number
            format: float
        - description: "A lekérési terület hosszúsági íve. (Terület hosszúsága: `lon +/- lonSpan`)."
          example: 0.032126676908724505
          in: query
          name: lonSpan
          schema:
            type: number
            format: float
        - description: A visszaadott elemek minimális száma.
          example: 5
          in: query
          name: minResult
          schema:
            type: integer
            format: int32
            default: 5
        - description: A lekérdezési időablak a `time` paraméter után ennyi perccel ér véget.
          example: 30
          in: query
          name: minutesAfter
          schema:
            type: integer
            format: int32
            default: 30
        - description: A lekérdezési időablak a `time` paraméter előtt ennyi perccel indul.
          example: 2
          in: query
          name: minutesBefore
          schema:
            type: integer
            format: int32
            default: 2
        - deprecated: true
          description: Ha igaz akkor csak az érkezési (és előrejelzett érkezési) idők nem szerepelnek a válaszban.
          example: false
          in: query
          name: onlyDepartures
          schema:
            type: boolean
            default: true
        - description: A válasz szűrésére használt keresési kifejezés.
          in: query
          name: query
          schema:
            type: string
        - description: Ha a `latSpan` vagy a `longSpan` nincs kitöltve, a keresési terület a középpontól számított `radius` méter távolság mind a négy irányban.
          example: 100
          in: query
          name: radius
          schema:
            type: integer
            format: int32
            default: 100
        - description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül.
          explode: false
          in: query
          name: includeReferences
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ReferencesSchema"
          style: form
        - description: A megállók azonosítóinak listája, amelyekhez a lekérést végezzük.
          example: BKK_F01029,BKK_F01029
          in: query
          name: stopId
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AgencyAndId"
        - description: A visszaadott bejegyzések típusa.
          example: ARRIVAL_AND_DEPARTURE
          in: query
          name: stopTimeType
          schema:
            $ref: "#/components/schemas/StopTimeType"
        - description: A lekérdezés kiértékeléséhez használt időpont. Alapértelmezetten az aktuális szerveridő.
          example: 1625740980
          in: query
          name: time
          schema:
            type: integer
            format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrivalsAndDeparturesForStopOTPMethodResponse"
          description: Lekéri a megállóhoz tartozó érkezési és indulási időket.
  /{dialect}/api/where/bicycle-rental:
    get:
      operationId: getBicycleRentalStations
      parameters:
        - description: Az API verziója.
          example: 2
          in: query
          name: version
          schema:
            $ref: "#/components/schemas/ApiVersion"
        - description: A kliensalkalmazás verziója.
          example: 1.1.abc
          in: query
          name: appVersion
          schema:
            type: string
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
        - description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül.
          explode: false
          in: query
          name: includeReferences
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ReferencesSchema"
          style: form
        - description: A releváns állomások azonosítói.
          example: 42990788
          in: query
          name: stationId
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BicycleRentalMethodResponse"
          description: Visszatér az összes kerékpárkölcsönző állomással. A válasz a `stationId` paraméterrel szűrhető.
  /{dialect}/api/where/booking-redirect:
    get:
      operationId: bookingRedirect
      parameters:
        - description: A foglalási oldal szolgáltatójának azonosítója.
          example: BKK_BKK
          in: query
          name: agencyId
          schema:
            $ref: "#/components/schemas/AgencyAndId"
        - description: A leszállási megálló azonosítója.
          example: BKK_064215
          in: query
          name: alightStopId
          schema:
            $ref: "#/components/schemas/AgencyAndId"
        - description: Az API verziója.
          example: 2
          in: query
          name: version
          schema:
            $ref: "#/components/schemas/ApiVersion"
        - description: A kliensalkalmazás verziója.
          example: 1.1.abc
          in: query
          name: appVersion
          schema:
            type: string
        - description: A felszállási megálló azonosítója.
          example: BKK_064215
          in: query
          name: boardStopId
          schema:
            $ref: "#/components/schemas/AgencyAndId"
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
        - description: A járat íránya.
          example: 1
          in: query
          name: directionId
          schema:
            type: string
        - description: A járat azonosítója.
          example: BKK_0650
          in: query
          name: routeId
          schema:
            $ref: "#/components/schemas/AgencyAndId"
        - description: A menet üzem napja.
          example: 20220130
          in: query
          name: serviceDate
          schema:
            $ref: "#/components/schemas/ServiceDate"
        - description: A menet azonosítója.
          example: BKK_ADF5443
          in: query
          name: tripId
          schema:
            $ref: "#/components/schemas/AgencyAndId"
      responses:
        "302":
          description: Átírányit a foglalási oldalra.
        "404":
          description: A kért foglalási oldal nem található.
  /{dialect}/api/where/metadata:
    get:
      operationId: getMetadata
      parameters:
        - description: Az API verziója.
          example: 2
          in: query
          name: version
          schema:
            $ref: "#/components/schemas/ApiVersion"
        - description: A kliensalkalmazás verziója.
          example: 1.1.abc
          in: query
          name: appVersion
          schema:
            type: string
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
        - description: A lekérés kiértékelésének időpontja epoch másodpercben (az aktív zavarok lekéréséhez szükséges).A szerver ideje az alapértelmezett értéke.
          example: 1625666578
          in: query
          name: time
          schema:
            type: integer
            format: int64
        - description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül.
          explode: false
          in: query
          name: includeReferences
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ReferencesSchema"
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetadataResponse"
          description: A szerver metaadataival tér vissza.
  /{dialect}/api/where/multi-route-details:
    get:
      operationId: getMultiRouteDetails
      parameters:
        - description: Az API verziója.
          example: 2
          in: query
          name: version
          schema:
            $ref: "#/components/schemas/ApiVersion"
        - description: A kliensalkalmazás verziója.
          example: 1.1.abc
          in: query
          name: appVersion
          schema:
            type: string
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
        - description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül.
          explode: false
          in: query
          name: includeReferences
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ReferencesSchema"
          style: form
        - description: Ha igaz, akkor az útvonalhoz tartozó kapcsolódó útvonalak is szerepelnek a válaszban.
          example: false
          in: query
          name: related
          schema:
            type: boolean
            default: false
        - description: A lekért járatok azonosítói.
          example: BKK_3040,BKK_3060
          in: query
          name: routeId
          required: true
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AgencyAndId"
        - description: Az aktív zavarok lekéréséhez használt dátum. Alapértelmezett értéke az aktuális nap.
          example: 20210707
          in: query
          name: date
          schema:
            $ref: "#/components/schemas/ServiceDate"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MultiRouteDetailsMethodResponse"
          description: Az összes járatot visszaadja a megadott azonosítókhoz.
        "400":
          description: A `date` paramétert nem sikerült beolvasni.
        "404":
          description: Ismeretlen járat azonosító.
  /{dialect}/api/where/onboard-depart-search:
    post:
      operationId: searchForOnboardDepartVehicles
      parameters:
        - description: Az API verziója.
          example: 2
          in: query
          name: version
          schema:
            $ref: "#/components/schemas/ApiVersion"
        - description: A kliensalkalmazás verziója.
          example: 1.1.abc
          in: query
          name: appVersion
          schema:
            type: string
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
        - description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül.
          explode: false
          in: query
          name: includeReferences
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ReferencesSchema"
          style: form
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/OnboardDepartPosition"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OnboardDepartSearchMethodResponse"
          description: Visszatér az utas útvonalára illeszkedő járművekkel.
  /{dialect}/api/where/onboarding-button:
    get:
      operationId: getOnboardingButtonDeparturesForLocation
      parameters:
        - description: Az API verziója.
          example: 2
          in: query
          name: version
          schema:
            $ref: "#/components/schemas/ApiVersion"
        - description: A kliensalkalmazás verziója.
          example: 1.1.abc
          in: query
          name: appVersion
          schema:
            type: string
        - description: A kliens szélességi koordinátája.
          example: 47.47375
          in: query
          name: clientLat
          schema:
            type: number
            format: double
            default: 0
        - description: A kliens hosszúsági koordinátája.
          example: 19.049086
          in: query
          name: clientLon
          schema:
            type: number
            format: double
            default: 0
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
        - description: Az indulásokat a megadott viszonylat módja szerint szűri.
          example: BUS
          explode: false
          in: query
          name: excludeRouteTypes
          schema:
            type: array
            items:
              $ref: "#/components/schemas/TraverseMode"
          style: form
        - description: Menetrendi adatok maximális száma egy csoportban.
          example: 2
          in: query
          name: groupLimit
          schema:
            type: integer
            format: int32
            default: 4
        - description: Amikor lehetséges, mindegyik azonosítóhoz legalább egy indulás/érkezés visszaadásra kerül.
          example: BKK_VP06,BKK_0090
          in: query
          name: includeRouteId
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AgencyAndId"
        - description: Az indulásokat a megadott viszonylat módja szerint szűri.
          example: BUS
          explode: false
          in: query
          name: includeRouteTypes
          schema:
            type: array
            items:
              $ref: "#/components/schemas/TraverseMode"
          style: form
        - description: A menethez társított járművek kitöltése a válaszban
          example: false
          in: query
          name: includeVehicleFromTrip
          schema:
            type: boolean
        - description: A megállóhely induláshoz tartozó elem a jármű fordán lévő járművel legyen bővítve.
          example: false
          in: query
          name: includeVehicleFromVehicleBlock
          schema:
            type: boolean
        - description: A helyszín középpontjának szélessgéi koordinátája.
          example: 47.4973131430789
          in: query
          name: lat
          schema:
            type: number
            format: float
        - description: "A lekérési terület szélességi íve. (Terület szélessége: `lat +/- latspan`)."
          example: 0.013365429598373169
          in: query
          name: latSpan
          schema:
            type: number
            format: float
        - description: A visszaadott indulási és érkezési idők listájának maximális hossza.
          example: 60
          in: query
          name: limit
          schema:
            type: integer
            format: int32
            default: 60
        - description: A helyszín középpontjának hosszúsági koordinátája.
          example: 19.064639534671457
          in: query
          name: lon
          schema:
            type: number
            format: float
        - description: "A lekérési terület hosszúsági íve. (Terület hosszúsága: `lon +/- lonSpan`)."
          example: 0.032126676908724505
          in: query
          name: lonSpan
          schema:
            type: number
            format: float
        - description: A visszaadott elemek minimális száma.
          example: 5
          in: query
          name: minResult
          schema:
            type: integer
            format: int32
            default: 5
        - description: A lekérdezési időablak a `time` paraméter után ennyi perccel ér véget.
          example: 30
          in: query
          name: minutesAfter
          schema:
            type: integer
            format: int32
            default: 30
        - description: A lekérdezési időablak a `time` paraméter előtt ennyi perccel indul.
          example: 2
          in: query
          name: minutesBefore
          schema:
            type: integer
            format: int32
            default: 2
        - deprecated: true
          description: Ha igaz akkor csak az érkezési (és előrejelzett érkezési) idők nem szerepelnek a válaszban.
          example: false
          in: query
          name: onlyDepartures
          schema:
            type: boolean
            default: true
        - description: A válasz szűrésére használt keresési kifejezés.
          in: query
          name: query
          schema:
            type: string
        - description: Ha a `latSpan` vagy a `longSpan` nincs kitöltve, a keresési terület a középpontól számított `radius` méter távolság mind a négy irányban.
          example: 100
          in: query
          name: radius
          schema:
            type: integer
            format: int32
            default: 100
        - description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül.
          explode: false
          in: query
          name: includeReferences
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ReferencesSchema"
          style: form
        - description: A megállók azonosítóinak listája, amelyekhez a lekérést végezzük.
          example: BKK_F01029,BKK_F01029
          in: query
          name: stopId
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AgencyAndId"
        - description: A visszaadott bejegyzések típusa.
          example: ARRIVAL_AND_DEPARTURE
          in: query
          name: stopTimeType
          schema:
            $ref: "#/components/schemas/StopTimeType"
        - description: A lekérdezés kiértékeléséhez használt időpont. Alapértelmezetten az aktuális szerveridő.
          example: 1625740980
          in: query
          name: time
          schema:
            type: integer
            format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrivalsAndDeparturesForLocationOTPMethodResponse"
          description: Visszaadja egy területhez tartozó érkezési és indulási időket járatazonosítók és célállomások szerint csoportosítva.
  /{dialect}/api/where/plan-access:
    get:
      operationId: planAccess
      parameters:
        - description: Az API verziója.
          example: 2
          in: query
          name: version
          schema:
            $ref: "#/components/schemas/ApiVersion"
        - description: A kliensalkalmazás verziója.
          example: 1.1.abc
          in: query
          name: appVersion
          schema:
            type: string
        - description: Érkezési időre tervezzünk-e a megadott `date` és `time` paraméterrel.
          example: true
          in: query
          name: arriveBy
          schema:
            type: boolean
        - description: A dátum, amikor a tervezés indul (`arriveBy` esetén érkezik).
          example: "2021-07-09"
          in: query
          name: date
          schema:
            type: string
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
        - description: Az indulási hely adatai `név::hely` formában. A `név` az adott hely tetszőleges neve, amely az útiterv kiindulási pontjának lesz a neve (`leg.from.name`). A `hely` lehet koordináta `lat,lon` formában, vagy a geocoder API által visszaadott `vertex` azonosítója.
          example: BKK Központi Ügyfélszolgálat::47.4985022,19.0551266
          in: query
          name: fromPlace
          required: true
          schema:
            type: string
        - description: A tervező milyen közlekedési módokat használjon. A kerékpár kölcsönzés a `BICYCLE,WALK` paraméterekkel kapcsolható be.
          example: TRANSIT,WALK
          explode: false
          in: query
          name: mode
          required: true
          schema:
            type: array
            items:
              $ref: "#/components/schemas/TraverseMode"
          style: form
        - description: Legfeljebb hány útvonal szerepeljen a válaszban.
          example: 5
          in: query
          name: numItineraries
          schema:
            type: integer
            format: int32
        - description: A kereső mire optimalizálja az útvonalakat.
          example: BEST
          in: query
          name: optimize
          schema:
            $ref: "#/components/schemas/OptimizeType"
        - description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül.
          explode: false
          in: query
          name: includeReferences
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ReferencesSchema"
          style: form
        - description: Az első járműre szállás előtt történjen-e jegyvásárlás.
          example: true
          in: query
          name: shouldBuyTickets
          schema:
            type: boolean
        - description: A válasz tartalmazza-e a járatok által érintett köztes megállókat is.
          example: true
          in: query
          name: showIntermediateStops
          schema:
            type: boolean
        - description: Az idő, amikor a tervezés indul (`arriveBy` esetén érkezik).
          example: "11:35"
          in: query
          name: time
          schema:
            type: string
        - description: Az érkezési hely adatai `név::hely` formában. A `név` az adott hely tetszőleges neve, amely az útiterv érkezési pontjának lesz a neve (`leg.to.name`). A `hely` lehet koordináta `lat,lon` formában, vagy a geocoder API által visszaadott `vertex` azonosítója.
          example: Mechwart liget::BKK:CSF00195
          in: query
          name: toPlace
          required: true
          schema:
            type: string
        - description: Kerékpáros háromszög módú tervezés esetén mennyire számít a biztonság. 0 és 1 közötti szám, és 1-et kell kiadnia a másik két faktor összegével.
          example: 0.5
          in: query
          name: triangleSafetyFactor
          schema:
            type: number
            format: double
        - description: Kerékpáros háromszög módú tervezés esetén mennyire számít az útvonal síksága. 0 és 1 közötti szám, és 1-et kell kiadnia a másik két faktor összegével.
          example: 0
          in: query
          name: triangleSlopeFactor
          schema:
            type: number
            format: double
        - description: Kerékpáros háromszög módú tervezés esetén mennyire számít a gyorsaság. 0 és 1 közötti szám, és 1-et kell kiadnia a másik két faktor összegével.
          example: 0.5
          in: query
          name: triangleTimeFactor
          schema:
            type: number
            format: double
        - description: A séta sebességét meghatározó profil.
          example: MID
          in: query
          name: walkProfile
          schema:
            $ref: "#/components/schemas/WalkProfile"
        - description: Az összes járat alacsonypadlós legyen-e.
          example: false
          in: query
          name: wheelchair
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanTripResponse"
          description: A megadott paraméterekkel tervez megállóba útvonalat.
  /{dialect}/api/where/plan-trip:
    get:
      operationId: planTrip
      parameters:
        - description: Az API verziója.
          example: 2
          in: query
          name: version
          schema:
            $ref: "#/components/schemas/ApiVersion"
        - description: A kliensalkalmazás verziója.
          example: 1.1.abc
          in: query
          name: appVersion
          schema:
            type: string
        - description: Érkezési időre tervezzünk-e a megadott `date` és `time` paraméterrel.
          example: true
          in: query
          name: arriveBy
          schema:
            type: boolean
        - description: A dátum, amikor a tervezés indul (`arriveBy` esetén érkezik).
          example: "2021-07-09"
          in: query
          name: date
          schema:
            type: string
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
        - description: Az indulási hely adatai `név::hely` formában. A `név` az adott hely tetszőleges neve, amely az útiterv kiindulási pontjának lesz a neve (`leg.from.name`). A `hely` lehet koordináta `lat,lon` formában, vagy a geocoder API által visszaadott `vertex` azonosítója.
          example: BKK Központi Ügyfélszolgálat::47.4985022,19.0551266
          in: query
          name: fromPlace
          required: true
          schema:
            type: string
        - description: A tervező milyen közlekedési módokat használjon. A kerékpár kölcsönzés a `BICYCLE,WALK` paraméterekkel kapcsolható be.
          example: TRANSIT,WALK
          explode: false
          in: query
          name: mode
          required: true
          schema:
            type: array
            items:
              $ref: "#/components/schemas/TraverseMode"
          style: form
        - description: Legfeljebb hány útvonal szerepeljen a válaszban.
          example: 5
          in: query
          name: numItineraries
          schema:
            type: integer
            format: int32
        - description: A kereső mire optimalizálja az útvonalakat.
          example: BEST
          in: query
          name: optimize
          schema:
            $ref: "#/components/schemas/OptimizeType"
        - description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül.
          explode: false
          in: query
          name: includeReferences
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ReferencesSchema"
          style: form
        - description: Az első járműre szállás előtt történjen-e jegyvásárlás.
          example: true
          in: query
          name: shouldBuyTickets
          schema:
            type: boolean
        - description: A válasz tartalmazza-e a járatok által érintett köztes megállókat is.
          example: true
          in: query
          name: showIntermediateStops
          schema:
            type: boolean
        - description: Az idő, amikor a tervezés indul (`arriveBy` esetén érkezik).
          example: "11:35"
          in: query
          name: time
          schema:
            type: string
        - description: Az érkezési hely adatai `név::hely` formában. A `név` az adott hely tetszőleges neve, amely az útiterv érkezési pontjának lesz a neve (`leg.to.name`). A `hely` lehet koordináta `lat,lon` formában, vagy a geocoder API által visszaadott `vertex` azonosítója.
          example: Mechwart liget::BKK:CSF00195
          in: query
          name: toPlace
          required: true
          schema:
            type: string
        - description: Kerékpáros háromszög módú tervezés esetén mennyire számít a biztonság. 0 és 1 közötti szám, és 1-et kell kiadnia a másik két faktor összegével.
          example: 0.5
          in: query
          name: triangleSafetyFactor
          schema:
            type: number
            format: double
        - description: Kerékpáros háromszög módú tervezés esetén mennyire számít az útvonal síksága. 0 és 1 közötti szám, és 1-et kell kiadnia a másik két faktor összegével.
          example: 0
          in: query
          name: triangleSlopeFactor
          schema:
            type: number
            format: double
        - description: Kerékpáros háromszög módú tervezés esetén mennyire számít a gyorsaság. 0 és 1 közötti szám, és 1-et kell kiadnia a másik két faktor összegével.
          example: 0.5
          in: query
          name: triangleTimeFactor
          schema:
            type: number
            format: double
        - description: A séta sebességét meghatározó profil.
          example: MID
          in: query
          name: walkProfile
          schema:
            $ref: "#/components/schemas/WalkProfile"
        - description: Az összes járat alacsonypadlós legyen-e.
          example: false
          in: query
          name: wheelchair
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanTripResponse"
          description: A megadott paraméterekkel tervez útvonalat.
  /{dialect}/api/where/references:
    get:
      operationId: getReferences
      parameters:
        - description: A szolgáltató ID-je.
          example: BKK_BKK
          in: query
          name: agencyId
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AgencyAndId"
        - description: A zavar ID-je.
          example: BKK_bkkinfo-81404
          in: query
          name: alertId
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AgencyAndId"
        - description: Az API verziója.
          example: 2
          in: query
          name: version
          schema:
            $ref: "#/components/schemas/ApiVersion"
        - description: A kliensalkalmazás verziója.
          example: 1.1.abc
          in: query
          name: appVersion
          schema:
            type: string
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
        - description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül.
          explode: false
          in: query
          name: includeReferences
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ReferencesSchema"
          style: form
        - description: A járat ID-ja.
          example: BKK_3040
          in: query
          name: routeId
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AgencyAndId"
        - description: A megálló ID-ja.
          example: BKK_F00001
          in: query
          name: stopId
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AgencyAndId"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReferencesMethodResponse"
          description: ID alapú referencia lekérdezés.
  /{dialect}/api/where/route-details:
    get:
      operationId: getRouteDetails
      parameters:
        - description: Az API verziója.
          example: 2
          in: query
          name: version
          schema:
            $ref: "#/components/schemas/ApiVersion"
        - description: A kliensalkalmazás verziója.
          example: 1.1.abc
          in: query
          name: appVersion
          schema:
            type: string
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
        - description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül.
          explode: false
          in: query
          name: includeReferences
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ReferencesSchema"
          style: form
        - description: Ha igaz, akkor az útvonalhoz tartozó kapcsolódó útvonalak is szerepelnek a válaszban.
          example: false
          in: query
          name: related
          schema:
            type: boolean
            default: false
        - description: A járat ID-ja.
          example: BKK_3040
          in: query
          name: routeId
          required: true
          schema:
            $ref: "#/components/schemas/AgencyAndId"
        - description: Az aktív zavarok lekéréséhez használt dátum. Alapértelmezett értéke az aktuális nap.
          example: 20210707
          in: query
          name: date
          schema:
            $ref: "#/components/schemas/ServiceDate"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RouteDetailsMethodResponse"
          description: Visszaadja a megadott ID-val rendelkező járatot.
        "400":
          description: Rossz formátumú a `date` paraméter.
        "404":
          description: Az ID-hoz nem található járat.
  /{dialect}/api/where/route-details-for-stop:
    get:
      operationId: getRouteDetailsForStop
      parameters:
        - description: Az API verziója.
          example: 2
          in: query
          name: version
          schema:
            $ref: "#/components/schemas/ApiVersion"
        - description: A kliensalkalmazás verziója.
          example: 1.1.abc
          in: query
          name: appVersion
          schema:
            type: string
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
        - description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül.
          explode: false
          in: query
          name: includeReferences
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ReferencesSchema"
          style: form
        - description: A lekért megálló azonosítója.
          example: BKK_F01294
          in: query
          name: stopId
          schema:
            $ref: "#/components/schemas/AgencyAndId"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RouteDetailsForStopMethodResponse"
          description: A megállóhoz és a testvérmegállóihoz tartozó összes járattal tér vissza.
        "404":
          description: Ismeretlen megálló azonosító.
  /{dialect}/api/where/schedule-for-stop:
    get:
      operationId: getScheduleForStop
      parameters:
        - description: Az API verziója.
          example: 2
          in: query
          name: version
          schema:
            $ref: "#/components/schemas/ApiVersion"
        - description: A kliensalkalmazás verziója.
          example: 1.1.abc
          in: query
          name: appVersion
          schema:
            type: string
        - description: A kért dátum.
          example: 20210708
          in: query
          name: date
          schema:
            type: string
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
        - description: Igaz esetén az érkezési és előrejelzett érkezési idők ki lesznek hagyva a válaszból.
          example: false
          in: query
          name: onlyDepartures
          schema:
            type: boolean
            default: true
        - description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül.
          explode: false
          in: query
          name: includeReferences
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ReferencesSchema"
          style: form
        - description: A releváns megállók azonosítói.
          example: BKK_F01294,BKK_F01294
          in: query
          name: stopId
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AgencyAndId"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduleForStopOTPMethodResponse"
          description: Visszaadja a menetrendet az adott megállóhoz.
        "400":
          description: Nem sikerült beolvasni a dátumot.
        "404":
          description: Ismeretlen stopId.
  /{dialect}/api/where/search:
    get:
      operationId: search
      parameters:
        - description: Az API verziója.
          example: 2
          in: query
          name: version
          schema:
            $ref: "#/components/schemas/ApiVersion"
        - description: A kliensalkalmazás verziója.
          example: 1.1.abc
          in: query
          name: appVersion
          schema:
            type: string
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
        - description: A látható térkép középpontjának szélessgéi koordinátája.
          example: 47.4973131430789
          in: query
          name: lat
          schema:
            type: number
            format: float
        - description: A látható térkép középpontjának hosszúsági koordinátája.
          example: 19.064639534671457
          in: query
          name: lon
          schema:
            type: number
            format: float
        - description: A visszaadott elemek minimális száma.
          example: 5
          in: query
          name: minResult
          schema:
            type: integer
            format: int32
            default: 5
        - description: Szűrőfeltétel, amire illesztve vannak a zavarok, járatok és megállók.
          example: BKK_bkkinfo-75694
          in: query
          name: query
          schema:
            type: string
        - description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül.
          explode: false
          in: query
          name: includeReferences
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ReferencesSchema"
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchMethodResponse"
          description: Visszaadja az olyan zavarokat, megállókat és járatokat, amelyek tulajdonságai illeszkednek a megadott szűrőrfeltételre.
  /{dialect}/api/where/statistics:
    get:
      operationId: getStatistics
      parameters:
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatisticsResponse"
          description: Egyszerű végpont hibakereséshez, ami egy "OK" választ ad vissza.
  /{dialect}/api/where/stops-for-location:
    get:
      operationId: getStopsForLocation
      parameters:
        - description: Az API verziója.
          example: 2
          in: query
          name: version
          schema:
            $ref: "#/components/schemas/ApiVersion"
        - description: A kliensalkalmazás verziója.
          example: 1.1.abc
          in: query
          name: appVersion
          schema:
            type: string
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
        - description: A helyszín középpontjának szélessgéi koordinátája.
          example: 47.4973131430789
          in: query
          name: lat
          schema:
            type: number
            format: float
        - description: "A lekérési terület szélességi íve. (Terület szélessége: `lat +/- latspan`)."
          example: 0.013365429598373169
          in: query
          name: latSpan
          schema:
            type: number
            format: float
        - description: A helyszín középpontjának hosszúsági koordinátája.
          example: 19.064639534671457
          in: query
          name: lon
          schema:
            type: number
            format: float
        - description: "A lekérési terület hosszúsági íve. (Terület hosszúsága: `lon +/- lonSpan`)."
          example: 0.032126676908724505
          in: query
          name: lonSpan
          schema:
            type: number
            format: float
        - description: A visszaadott elemek minimális száma.
          example: 5
          in: query
          name: minResult
          schema:
            type: integer
            format: int32
            default: 5
        - description: A válasz szűrésére használt keresési kifejezés.
          in: query
          name: query
          schema:
            type: string
        - description: Ha a `latSpan` vagy a `longSpan` nincs kitöltve, a keresési terület a középpontól számított `radius` méter távolság mind a négy irányban.
          example: 100
          in: query
          name: radius
          schema:
            type: integer
            format: int32
            default: 100
        - description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül.
          explode: false
          in: query
          name: includeReferences
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ReferencesSchema"
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopsForLocationResponse"
          description: Egy megállólistát ad vissza az adott helyhez.
  /{dialect}/api/where/ticketing-locations:
    get:
      operationId: getTicketingData
      parameters:
        - description: Az API verziója.
          example: 2
          in: query
          name: version
          schema:
            $ref: "#/components/schemas/ApiVersion"
        - description: A kliensalkalmazás verziója.
          example: 1.1.abc
          in: query
          name: appVersion
          schema:
            type: string
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
        - description: Ha igaz, és az adat változott az `ifModifiedSince` query paraméterben megadott időpont óta, akkor az összes adat visszaadásra kerül. Ha nincs megadva csak a módosult elemek szerepelnek a válaszban. Csak az `ifModifiedSince` query paraméterrel együtt szerepelhet, mivel az `If-Modified-Since` fejléc minden esetben a teljes választ tartalmazza.
          example: true
          in: query
          name: full
          schema:
            type: boolean
        - description: Ha meg van adva, akkor csak abban az esetben érkezik vissza adat, ha az változott a megadott időpont óta. Különben HTTP 304 a válasz. A query paraméternek elsőbbsége van ezzel szemben.
          example: Fri, 21 Jan 2022 09:48:43 GMT+01:00
          in: header
          name: If-Modified-Since
          schema:
            type: string
            format: date-time
        - description: Csak azokat az elemeket adjuk vissza, amik módosultak az itt megadott időbélyeg (UNIX időbélyeg másodpercben) után. Ha nincs változás üres listákkal tér vissza. Elsőbbsége van a header paraméterrel szemben.
          example: 1625685137
          in: query
          name: ifModifiedSince
          schema:
            type: integer
            format: int64
            default: -1
        - description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül.
          explode: false
          in: query
          name: includeReferences
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ReferencesSchema"
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TicketingMethodResponse"
          description: Visszaadja a jegyértékesítő helyeket és jegytípusokat.
        "304":
          description: Nem változott az adat az `ifModifiedSince` query vagy header paraméterben megadott időpont óta.
  /{dialect}/api/where/trip-details:
    get:
      operationId: getTripDetails
      parameters:
        - description: Az API verziója.
          example: 2
          in: query
          name: version
          schema:
            $ref: "#/components/schemas/ApiVersion"
        - description: A kliensalkalmazás verziója.
          example: 1.1.abc
          in: query
          name: appVersion
          schema:
            type: string
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
        - description: Ha meg van adva, akkor csak abban az esetben érkezik vissza adat, ha az változott a megadott időpont óta. Különben HTTP 304 a válasz. A query paraméternek elsőbbsége van ezzel szemben.
          example: Fri, 21 Jan 2022 09:48:43 GMT+01:00
          in: header
          name: If-Modified-Since
          schema:
            type: string
            format: date-time
        - description: Akkor adunk vissza adatot, ha az módosult az itt megadott időbélyeg (UNIX időbélyeg másodpercben) után. Ellenkező esetben HTTP 304 a válasz, ha nincs változás. Elsőbbsége van a header paraméterrel szemben.
          example: 1625685137
          in: query
          name: ifModifiedSince
          schema:
            type: integer
            format: int64
            default: -1
        - description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül.
          explode: false
          in: query
          name: includeReferences
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ReferencesSchema"
          style: form
        - description: Ha nincs kitöltve a járműazonosító, ezen a dátumon lesz keresve az adott azonosítójú menet.
          example: 20210708
          in: query
          name: date
          schema:
            $ref: "#/components/schemas/ServiceDate"
        - description: Ha nincs kitöltve a járműazonosító, az itt megadott azonosítóval rendelkező menet lesz a válaszban.
          example: BKK_C23556161
          in: query
          name: tripId
          schema:
            $ref: "#/components/schemas/AgencyAndId"
        - description: Amennyiben meg van adva, azon menet érkezik a válaszban, amit az adott jármű teljesít.
          example: BKK_4510
          in: query
          name: vehicleId
          schema:
            $ref: "#/components/schemas/AgencyAndId"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TripDetailsOTPMethodResponse"
          description: Visszaadja a részletes információit egy menetnek, ami az azonosítója és a dátum alapján, vagy az azt teljesítő jármű azonosítója alapján lett lekérve.
        "304":
          description: Nem változott az adat az `ifModifiedSince` paraméterben megadott időpont óta.
        "400":
          description: Nem sikerült beolvasni a dátumot.
        "404":
          description: "A következő esetek egyike: -Ismeretlen járműazonosító. -Ismereten menetazonosító. -A kért menet nem közlekedik az adott napon."
  /{dialect}/api/where/vehicle-for-trip:
    get:
      operationId: getVehicleForTrip
      parameters:
        - description: Az API verziója.
          example: 2
          in: query
          name: version
          schema:
            $ref: "#/components/schemas/ApiVersion"
        - description: A kliensalkalmazás verziója.
          example: 1.1.abc
          in: query
          name: appVersion
          schema:
            type: string
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
        - description: Ha meg van adva, akkor csak abban az esetben érkezik vissza adat, ha az változott a megadott időpont óta. Különben HTTP 304 a válasz. A query paraméternek elsőbbsége van ezzel szemben.
          example: Fri, 21 Jan 2022 09:48:43 GMT+01:00
          in: header
          name: If-Modified-Since
          schema:
            type: string
            format: date-time
        - description: Akkor adunk vissza adatot, ha az módosult az itt megadott időbélyeg (UNIX időbélyeg másodpercben) után. Ellenkező esetben HTTP 304 a válasz, ha nincs változás. Elsőbbsége van a header paraméterrel szemben.
          example: 1625685137
          in: query
          name: ifModifiedSince
          schema:
            type: integer
            format: int64
            default: -1
        - description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül.
          explode: false
          in: query
          name: includeReferences
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ReferencesSchema"
          style: form
        - description: A lekért menetrendi napok. Alapértelmezetten az aktuális nap.
          example: BKK_F01081
          in: query
          name: date
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ServiceDate"
        - description: A lekért menetek azonosítói.
          example: BKK_C3135012112,BKK_C3135012044
          in: query
          name: tripId
          required: true
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AgencyAndId"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VehicleForTripMethodResponse"
          description: Visszatér a megadott menetekhez és menetrendi napokhoz tartozó járművekkel.
        "304":
          description: Nem változott az adat az `ifModifiedSince` paraméterben megadott időpont óta.
        "400":
          description: A menet azonosítókat és menetrendi napokat tartalmazó tömbök mérete nem egyezik.
        "404":
          description: Az egyik menet azonosítóhoz nem található menet.
  /{dialect}/api/where/vehicles:
    get:
      operationId: getVehicles
      parameters:
        - description: Az API verziója.
          example: 2
          in: query
          name: version
          schema:
            $ref: "#/components/schemas/ApiVersion"
        - description: A kliensalkalmazás verziója.
          example: 1.1.abc
          in: query
          name: appVersion
          schema:
            type: string
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
        - description: Ha meg van adva, akkor csak abban az esetben érkezik vissza adat, ha az változott a megadott időpont óta. Különben HTTP 304 a válasz. A query paraméternek elsőbbsége van ezzel szemben.
          example: Fri, 21 Jan 2022 09:48:43 GMT+01:00
          in: header
          name: If-Modified-Since
          schema:
            type: string
            format: date-time
        - description: Akkor adunk vissza adatot, ha az módosult az itt megadott időbélyeg (UNIX időbélyeg másodpercben) után. Ellenkező esetben HTTP 304 a válasz, ha nincs változás. Elsőbbsége van a header paraméterrel szemben.
          example: 1625685137
          in: query
          name: ifModifiedSince
          schema:
            type: integer
            format: int64
            default: -1
        - description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül.
          explode: false
          in: query
          name: includeReferences
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ReferencesSchema"
          style: form
        - description: A lekért járművek azonosítói.
          example: BKK_2035
          in: query
          name: vehicleId
          required: true
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AgencyAndId"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VehiclesMethodResponse"
          description: Vehicle id alapú referencia lekérdezés
        "304":
          description: Nem változott az adat az `ifModifiedSince` paraméterben megadott időpont óta.
  /{dialect}/api/where/vehicles-for-location:
    get:
      operationId: getVehiclesForLocation
      parameters:
        - description: Az API verziója.
          example: 2
          in: query
          name: version
          schema:
            $ref: "#/components/schemas/ApiVersion"
        - description: A kliensalkalmazás verziója.
          example: 1.1.abc
          in: query
          name: appVersion
          schema:
            type: string
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
        - description: Ha meg van adva, akkor csak abban az esetben érkezik vissza adat, ha az változott a megadott időpont óta. Különben HTTP 304 a válasz. A query paraméternek elsőbbsége van ezzel szemben.
          example: Fri, 21 Jan 2022 09:48:43 GMT+01:00
          in: header
          name: If-Modified-Since
          schema:
            type: string
            format: date-time
        - description: Akkor adunk vissza adatot, ha az módosult az itt megadott időbélyeg (UNIX időbélyeg másodpercben) után. Ellenkező esetben HTTP 304 a válasz, ha nincs változás. Elsőbbsége van a header paraméterrel szemben.
          example: 1625685137
          in: query
          name: ifModifiedSince
          schema:
            type: integer
            format: int64
            default: -1
        - description: A terület középpontjának szélességi koordinátája.
          example: 47.4973131430789
          in: query
          name: lat
          schema:
            type: number
            format: float
        - description: "A lekérési terület szélességi íve. (Terület szélessége: `lat +/- latspan`)."
          example: 0.013365429598373169
          in: query
          name: latSpan
          schema:
            type: number
            format: float
        - description: A terület középpontjának hosszúsági koordinátája.
          example: 19.064639534671457
          in: query
          name: lon
          schema:
            type: number
            format: float
        - description: "A lekérési terület hosszúsági íve. (Terület hosszúsága: `lon +/- lonSpan`)."
          example: 0.032126676908724505
          in: query
          name: lonSpan
          schema:
            type: number
            format: float
        - description: A válasz listát szűrő feltétel, amit tartalmaznia kell a jármű azonosítójának, rendszámának vagy a típusának.
          example: BKK_4510
          in: query
          name: query
          schema:
            type: string
        - description: Ha a `latSpan` vagy a `longSpan` nincs kitöltve, a keresési terület a középpontól számított `radius` méter távolság mind a négy irányban.
          example: 100
          in: query
          name: radius
          schema:
            type: integer
            format: int32
            default: 100
        - description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül.
          explode: false
          in: query
          name: includeReferences
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ReferencesSchema"
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VehiclesForLocationMethodResponse"
          description: Visszatér az adott területen található összes járművel. Ha a `lat` vagy a `lon` null, az összes jármű benne lesz a válaszban.
        "304":
          description: Nem változott az adat az `ifModifiedSince` paraméterben megadott időpont óta.
  /{dialect}/api/where/vehicles-for-route:
    get:
      operationId: getVehiclesForRoute
      parameters:
        - description: Az API verziója.
          example: 2
          in: query
          name: version
          schema:
            $ref: "#/components/schemas/ApiVersion"
        - description: A kliensalkalmazás verziója.
          example: 1.1.abc
          in: query
          name: appVersion
          schema:
            type: string
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
        - description: Ha meg van adva, akkor csak abban az esetben érkezik vissza adat, ha az változott a megadott időpont óta. Különben HTTP 304 a válasz. A query paraméternek elsőbbsége van ezzel szemben.
          example: Fri, 21 Jan 2022 09:48:43 GMT+01:00
          in: header
          name: If-Modified-Since
          schema:
            type: string
            format: date-time
        - description: Akkor adunk vissza adatot, ha az módosult az itt megadott időbélyeg (UNIX időbélyeg másodpercben) után. Ellenkező esetben HTTP 304 a válasz, ha nincs változás. Elsőbbsége van a header paraméterrel szemben.
          example: 1625685137
          in: query
          name: ifModifiedSince
          schema:
            type: integer
            format: int64
            default: -1
        - description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül.
          explode: false
          in: query
          name: includeReferences
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ReferencesSchema"
          style: form
        - description: Tartalmazza-e a válasz a kapcsolódó járatokat is a referenciákban.
          example: false
          in: query
          name: related
          schema:
            type: boolean
            default: false
        - description: A lekért járatok azonosítói.
          example: BKK_3040,BKK_3060
          in: query
          name: routeId
          required: true
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AgencyAndId"
            uniqueItems: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VehiclesForRouteMethodResponse"
          description: A megadott járat azonosítókhoz tartozó járművekkel tér vissza.
        "304":
          description: Nem változott az adat az `ifModifiedSince` paraméterben megadott időpont óta.
        "404":
          description: A járat azonosítóhoz nem található járat.
  /{dialect}/api/where/vehicles-for-stop:
    get:
      operationId: getVehiclesForStop
      parameters:
        - description: Az API verziója.
          example: 2
          in: query
          name: version
          schema:
            $ref: "#/components/schemas/ApiVersion"
        - description: A kliensalkalmazás verziója.
          example: 1.1.abc
          in: query
          name: appVersion
          schema:
            type: string
        - description: Az API referenciáinak dialektusa.
          example: otp
          in: path
          name: dialect
          required: true
          schema:
            $ref: "#/components/schemas/Dialect"
        - description: Ha meg van adva, akkor csak abban az esetben érkezik vissza adat, ha az változott a megadott időpont óta. Különben HTTP 304 a válasz. A query paraméternek elsőbbsége van ezzel szemben.
          example: Fri, 21 Jan 2022 09:48:43 GMT+01:00
          in: header
          name: If-Modified-Since
          schema:
            type: string
            format: date-time
        - description: Akkor adunk vissza adatot, ha az módosult az itt megadott időbélyeg (UNIX időbélyeg másodpercben) után. Ellenkező esetben HTTP 304 a válasz, ha nincs változás. Elsőbbsége van a header paraméterrel szemben.
          example: 1625685137
          in: query
          name: ifModifiedSince
          schema:
            type: integer
            format: int64
            default: -1
        - description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül.
          explode: false
          in: query
          name: includeReferences
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ReferencesSchema"
          style: form
        - description: A lekért megálló azonosítója.
          example: BKK_F01081
          in: query
          name: stopId
          required: true
          schema:
            $ref: "#/components/schemas/AgencyAndId"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VehiclesForStopMethodResponse"
          description: Visszaadja az összes járművet, ami olyan menetet teljesít, ami tartalmazza a megadott megállót.
        "304":
          description: Nem változott az adat az `ifModifiedSince` paraméterben megadott időpont óta.
        "404":
          description: A megálló azonosítóhoz nem található megálló.
components:
  schemas:
    AbsoluteDirection:
      type: string
      description: A lépés abszolút iránya.
      enum:
        - NORTH
        - NORTHEAST
        - EAST
        - SOUTHEAST
        - SOUTH
        - SOUTHWEST
        - WEST
        - NORTHWEST
      example: WEST
    AgencyAndId:
      type: string
      description: Entitás azonosító
      example: BKK_DF544
    AlertDetailsMethodResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: A válasz státusz kódja.
          example: 200
        currentTime:
          type: integer
          format: int64
          description: Az aktuális szerveridő ezredmásodpercben.
          example: 1625747515786
        data:
          $ref: "#/components/schemas/TransitEntryWithReferencesTransitAlertDetails"
        status:
          $ref: "#/components/schemas/Status"
        text:
          type: string
          description: A válasz szövege.
          example: OK
        version:
          type: integer
          format: int32
          description: A válasz API verziója.
          example: 3
      required:
        - code
        - currentTime
        - data
        - status
        - text
        - version
    AlertSearchMethodResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: A válasz státusz kódja.
          example: 200
        currentTime:
          type: integer
          format: int64
          description: Az aktuális szerveridő ezredmásodpercben.
          example: 1625747515786
        data:
          $ref: "#/components/schemas/TransitEntryWithReferencesTransitSearch"
        status:
          $ref: "#/components/schemas/Status"
        text:
          type: string
          description: A válasz szövege.
          example: OK
        version:
          type: integer
          format: int32
          description: A válasz API verziója.
          example: 3
      required:
        - code
        - currentTime
        - data
        - status
        - text
        - version
    ApiVersion:
      type: string
      default: "2"
      enum:
        - "2"
        - "3"
        - "4"
        - "5"
    ArrivalsAndDeparturesForLocationOTPMethodResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: A válasz státusz kódja.
          example: 200
        currentTime:
          type: integer
          format: int64
          description: Az aktuális szerveridő ezredmásodpercben.
          example: 1625747515786
        data:
          $ref: "#/components/schemas/TransitListEntryWithReferencesTransitDepartureGroup"
        status:
          $ref: "#/components/schemas/Status"
        text:
          type: string
          description: A válasz szövege.
          example: OK
        version:
          type: integer
          format: int32
          description: A válasz API verziója.
          example: 3
      required:
        - code
        - currentTime
        - data
        - status
        - text
        - version
    ArrivalsAndDeparturesForStopOTPMethodResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: A válasz státusz kódja.
          example: 200
        currentTime:
          type: integer
          format: int64
          description: Az aktuális szerveridő ezredmásodpercben.
          example: 1625747515786
        data:
          $ref: "#/components/schemas/TransitEntryWithReferencesTransitArrivalsAndDepartures"
        status:
          $ref: "#/components/schemas/Status"
        text:
          type: string
          description: A válasz szövege.
          example: OK
        version:
          type: integer
          format: int32
          description: A válasz API verziója.
          example: 3
      required:
        - code
        - currentTime
        - data
        - status
        - text
        - version
    BicycleRentalMethodResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: A válasz státusz kódja.
          example: 200
        currentTime:
          type: integer
          format: int64
          description: Az aktuális szerveridő ezredmásodpercben.
          example: 1625747515786
        data:
          $ref: "#/components/schemas/TransitListEntryWithReferencesTransitBikeRentalStation"
        status:
          $ref: "#/components/schemas/Status"
        text:
          type: string
          description: A válasz szövege.
          example: OK
        version:
          type: integer
          format: int32
          description: A válasz API verziója.
          example: 3
      required:
        - code
        - currentTime
        - data
        - status
        - text
        - version
    BicycleStreetDirection:
      type: string
      description: A szakasz egyirányúsága.
      enum:
        - BIDIRECTIONAL
        - ONEWAY_WITH_TRAFFIC
        - ONEWAY_AGAINST_TRAFFIC
      example: ONEWAY_WITH_TRAFFIC
    BikeDisplayedLeg:
      type: object
      allOf:
        - $ref: "#/components/schemas/DisplayedLeg"
        - type: object
          properties:
            rented:
              type: boolean
              description: Jelzi, hogy a lábat bérelt kerékpárral kell bejárni.
              example: true
      required:
        - name
        - rented
        - time
        - type
        - walkTo
    BikeStreetCategory:
      type: string
      description: Kerékpáros útszakaszok kategórizálásai.
      enum:
        - CYCLEWAY
        - CYCLELANE
        - LOW_TRAFFIC
        - OTHER
        - PEDESTRIAN
      example: LOW_TRAFFIC
    CongestionLevel:
      type: string
      description: A járműhöz tartozó torlódási állapot.
      enum:
        - UNKNOWN
        - CONGESTION
      example: CONGESTION
      nullable: true
    DayOfWeek:
      type: string
      description: A nyitvatartási idő napja. Lehet HOL (ünnepnap) és 0247 (éjjel-nappali).
      enum:
        - MON
        - TUE
        - WED
        - THU
        - FRI
        - SAT
        - SUN
        - HOL
        - O247
      example: TUE
    DestinationDisplayedLeg:
      type: object
      allOf:
        - $ref: "#/components/schemas/DisplayedLeg"
      required:
        - name
        - time
        - type
        - walkTo
    Dialect:
      type: string
      enum:
        - otp
        - mobile
    DisplayedLeg:
      type: object
      description: Az útiterv kivonatos megjelenítéséhez használható  lábak és adatok.
      discriminator:
        mapping:
          bike: "#/components/schemas/BikeDisplayedLeg"
          destination: "#/components/schemas/DestinationDisplayedLeg"
          route: "#/components/schemas/RouteDisplayedLeg"
          ticketing: "#/components/schemas/TicketingDisplayedLeg"
          walk: "#/components/schemas/WalkDisplayedLeg"
        propertyName: type
      properties:
        first:
          type: boolean
          description: Jelzi, ha a láb az első az útitervben.
          example: true
        last:
          type: boolean
          description: Jelzi, ha a láb az utolsó az útitervben.
          example: true
        name:
          type: string
          description: Az indulási hely neve, kivéve az utolsón, ahol a érkezési helyé.
          example: realCity ITS Kft.
        time:
          type: integer
          format: int64
          description: Az utolsó lábon az érkezési idő, az összes többin az indulási.
          example: 1625825460000
        type:
          $ref: "#/components/schemas/DisplayedLegType"
        walkTo:
          type: boolean
          description: Jelzi, hogy a láb nem tranzit típusú.
          example: true
      required:
        - name
        - time
        - type
        - walkTo
    DisplayedLegType:
      type: string
      description: A láb típusa.
      enum:
        - bike
        - destination
        - route
        - ticketing
        - walk
      example: route
    EffectType:
      type: string
      description: A zavar hatásának típusa.
      enum:
        - NO_SERVICE
        - WARNING
    ElevationPoint:
      type: object
      description: A lábhoz tartozó magassági adatok.
      example: []
      properties:
        distance:
          type: number
          format: double
          description: A magassági pont távolsága a láb kezdetéhez képest méterben.
          example: 10.871
        elevation:
          type: number
          format: double
          description: A pont magassága.
          example: 0
          nullable: true
      required:
        - distance
        - elevation
    EncodedPolylineBean:
      type: object
      description: A szakasz geometriája.
      properties:
        length:
          type: integer
          format: int32
          description: A geometria (polyline) pontjainak száma.
          example: 3
        points:
          type: string
          description: A geometria (polyline) pontjai kódolva.
          example: o{sxFl}vaMjDpCf@\
      required:
        - length
        - points
    Itinerary:
      type: object
      description: A talált útvonalak listája.
      properties:
        bikeCategoryDistances:
          type: object
          additionalProperties:
            type: number
            format: double
            description: Az útiterv során hány méter kerékpározást tartalmaztak az egyes kategóriák. Az objektum kulcsai a kategóriák (`BikeStreetCategory`).
          description: Az útiterv során hány méter kerékpározást tartalmaztak az egyes kategóriák. Az objektum kulcsai a kategóriák (`BikeStreetCategory`).
          example:
            LOW_TRAFFIC: 12
        bikeDistance:
          type: number
          format: double
          description: Kerékpározási távolság az útvonalon méterben.
          example: 826.7
        bikeTime:
          type: integer
          format: int64
          description: Kerékpározási idő az útvonalon másodpercben.
          example: 620
        displayProductRecommendation:
          type: boolean
          description: Jelzi, ha az útvonalhoz kell termékajánlást mutatni.
          example: true
        displayedLegs:
          type: array
          description: Az útiterv kivonatos megjelenítéséhez használható  lábak és adatok.
          items:
            $ref: "#/components/schemas/DisplayedLeg"
        duration:
          type: integer
          format: int64
          description: Az útvonal hossza másodpercben.
          example: 1732
        elevationGained:
          type: number
          format: double
          description: Az útiterv során hány métert emelkedik az útvonal.
          example: 0
        elevationLost:
          type: number
          format: double
          description: Az útiterv során hány métert süllyed az útvonal.
          example: 0
        endTime:
          type: string
          format: date-time
          description: Az érkezési időpont ezredmásodpercben.
        generalizedCost:
          type: integer
          format: int32
          description: Az utazástervező algoritmus által használt súly.
          example: 998
        legs:
          type: array
          description: Az útiterv lábai (részei).
          items:
            $ref: "#/components/schemas/Leg"
        notAllTicketsAvailable:
          type: boolean
          description: "Jelzi, hogy a visszaadott útvonalak tartalmazhatnak olyan járatokat (pl.: vonatok), amire a terv során érintett jegyértékesítési helyen nem lehet jegyet váltani."
          example: false
        patternDuration:
          $ref: "#/components/schemas/PatternStatistics"
        patternFrequency:
          $ref: "#/components/schemas/PatternStatistics"
        patternItineraries:
          type: array
          description: Útitervminták engedélyezése esetén a mintába tartozó útitervek.
          items:
            $ref: "#/components/schemas/Itinerary"
        startTime:
          type: string
          format: date-time
          description: Az indulási időpont ezredmásodpercben.
        tooSloped:
          type: boolean
          description: Jelzi, ha az útvonal meredekebb, mint a paraméterekben kért.
          example: false
        transfers:
          type: integer
          format: int32
          description: Átszállások száma az útitervben.
          example: 1
        transitTime:
          type: integer
          format: int64
          description: Járművön töltött idő az útvonalon másodpercben.
          example: 620
        waitTimeAdjustedGeneralizedCost:
          type: integer
          format: int32
          description: A várakozási idővel igazított súly.
          example: 998
        waitingTime:
          type: integer
          format: int64
          description: Várakozási idő járműre az útvonalon másodpercben.
          example: 620
        walkDistance:
          type: number
          format: double
          description: Sétálási távolság az útvonalon méterben.
          example: 826.7
        walkLimitExceeded:
          type: boolean
          description: Jelzi, hogy a sétálási limit túl lett lépve az útitervben.
          example: false
        walkTime:
          type: integer
          format: int64
          description: Sétálási idő az útvonalon másodpercben.
          example: 620
      required:
        - bikeDistance
        - bikeTime
        - duration
        - elevationGained
        - elevationLost
        - endTime
        - generalizedCost
        - legs
        - notAllTicketsAvailable
        - startTime
        - tooSloped
        - transfers
        - transitTime
        - waitTimeAdjustedGeneralizedCost
        - waitingTime
        - walkDistance
        - walkLimitExceeded
        - walkTime
    Leg:
      type: object
      description: Az útiterv lábai (részei).
      properties:
        agencyId:
          type: string
          description: Tranzit láb esetén a járatot biztosító szolgáltató azonosítója.
          example: BKK_BKK
        agencyName:
          type: string
          description: Tranzit láb esetén a járatot biztosító szolgáltató neve.
          example: BKK
        agencyTimeZoneOffset:
          type: integer
          format: int32
          description: Tranzit láb esetén a járatot biztosító szolgáltató időzónájának eltolódása.
          example: 0
        agencyUrl:
          type: string
          description: Tranzit láb esetén a járatot biztosító szolgáltató linkje.
          example: https://www.bkk.hu
        alertIds:
          type: array
          description: A lábhoz tartozó aktív zavarok azonosítói.
          example:
            - BKK_bkkinfo-75685
          items:
            type: string
            description: A lábhoz tartozó aktív zavarok azonosítói.
            example: "[\"BKK_bkkinfo-75685\"]"
        alightRule:
          type: string
          description: Igényvezérelt menet esetén a leszállási szabály.
          example: coordinateWithDriver
        arrivalDelay:
          type: integer
          format: int32
          description: Tranzit láb esetén a láb vége és a tényleges leszállás közötti késleltetés.
          example: 0
        boardRule:
          type: string
          description: Igényvezérelt menet esetén a felszállási szabály.
          example: mustPhone
        departureDelay:
          type: integer
          format: int32
          description: Tranzit láb esetén a láb indulása és a tényleges felszállás közötti késleltetés.
          example: 0
        distance:
          type: number
          format: double
          description: A láb bejárása alatt megtett táv méterben.
          example: 209.215
        duration:
          type: integer
          format: int64
          description: A láb hossza ezredmásodpercben.
          example: 361000
        endTime:
          type: string
          format: date-time
          description: A láb vége ezredmásodpercben.
        from:
          $ref: "#/components/schemas/Place"
        generalizedCost:
          type: integer
          format: int32
          description: Az utazástervező algoritmus által használt súly.
          example: 998
        hasAlertInPattern:
          type: boolean
          description: Útiterv minták esetén jelzi, hogy a mintában a megfelelő lábak valamelyikén szerepel aktív riasztás. Nincs kitöltve, ha az útiterv minták ki vannak kapcsolva.
          example: true
        headsign:
          type: string
          description: Tranzit láb esetén a menet célállomása.
          example: Nagyvárad tér M
        interlineWithPreviousLeg:
          type: boolean
          description: Jelzi, hogy az utas maradjon a járművön a végállomásnál, mert másik menetként folytatódik (hurokjárat).
          example: false
        intermediateStops:
          type: array
          description: Tranzit láb esetén a köztes megállók a láb kezdete és végződése között.
          items:
            $ref: "#/components/schemas/Place"
        legElevation:
          type: array
          description: A lábhoz tartozó magassági adatok.
          example: []
          items:
            $ref: "#/components/schemas/ElevationPoint"
        legGeometry:
          $ref: "#/components/schemas/EncodedPolylineBean"
        mode:
          $ref: "#/components/schemas/TraverseMode"
        onBoardAccess:
          type: boolean
          default: false
          description: Igaz, ha járatról történt a tervezés.
          example: true
        pathway:
          type: boolean
          description: Jelzi, hogy a láb egy pathway (pl. metró lejáró).
          example: false
        realTime:
          type: boolean
          description: Jelzi, hogy a láb adatai valós idejű forrásból származnak.
          example: true
        rentedBike:
          type: boolean
          description: Jelzi, hogy a lábat bérelt kerékpárral kell bejárni.
          example: true
        requiresBooking:
          type: boolean
          description: Igaz, ha szükséges foglalás.
          example: true
        routeColor:
          type: string
          description: Tranzit láb esetén a járat hátterének színe a megjelenítéséhez.
          example: 009FE3
        routeId:
          type: string
          description: Tranzit láb esetén a járat azonosítója.
          example: BKK_MP53
        routeIds:
          type: array
          description: Útiterv minták esetén, a lábnak a mintában megfelelő, más lábakon használt járatok azonosítóinak listája.
          example:
            - BKK_MP53
          items:
            type: string
            description: Útiterv minták esetén, a lábnak a mintában megfelelő, más lábakon használt járatok azonosítóinak listája.
            example: "[\"BKK_MP53\"]"
        routeLongName:
          type: string
          description: Tranzit láb esetén a járat hosszú neve.
          example: M3
        routeShortName:
          type: string
          description: Tranzit láb esetén a járat rövid neve.
          example: M3
        routeTextColor:
          type: string
          description: Tranzit láb esetén a járat szövegének színe a megjelenítéséhez.
          example: FFFFFF
        serviceDate:
          type: string
          description: Tranzit láb esetén a menet menetrendi napja.
          example: "20210709"
        startTime:
          type: string
          format: date-time
          description: A láb kezdete ezredmásodpercben.
        staySeated:
          type: boolean
          description: Jelzi, hogy az aktuális és az előző tranzit lábat összekötő garantált (GTFS) csatlakozásnál a menet az aktuális járművön folytatódik.
          example: true
        steps:
          type: array
          description: Az útvonal lépései gyalogos, kerékpáros vagy autós láb lesetén.
          items:
            $ref: "#/components/schemas/WalkStep"
        timeZone:
          type: object
          properties:
            displayName:
              type: string
            dstsavings:
              type: integer
              format: int32
            id:
              type: string
            rawOffset:
              type: integer
              format: int32
          writeOnly: true
        to:
          $ref: "#/components/schemas/Place"
        transferFromPreviousTrip:
          type: boolean
          description: Jelzi, hogy az aktuális és az előző tranzit láb garantált (GTFS) csatlakozással van összekötve.
          example: true
        transitLeg:
          type: boolean
          description: Jelzi, hogy a láb tranzit-e.
          example: true
        tripBlockId:
          type: string
          description: Tranzit láb esetén a menethez tartozó GTFS block_id, amennyiben létezik.
          example: C32859_MP53_39_13
        tripId:
          type: string
          description: Tranzit láb esetén a menet azonosítója.
          example: BKK_C328598112
        tripIds:
          type: array
          description: Útiterv minták esetén, a lábnak a mintában megfelelő, más lábakon használt menetek azonosítóinak listája.
          example:
            - BKK_C328598112
            - BKK_C328598112
          items:
            type: string
            description: Útiterv minták esetén, a lábnak a mintában megfelelő, más lábakon használt menetek azonosítóinak listája.
            example: "[\"BKK_C328598112\",\"BKK_C328598112\"]"
        unknownGeometry:
          type: boolean
          description: Jelzi, hogy a láb geometriája ismeretlen.
          example: true
        vertex:
          type: string
          description: A menet utazástervező azonosítója, amelyet a `fromPlace` megadásához lehet használni.
          example: 20210708:BKK:AS4356
        wait:
          $ref: "#/components/schemas/WaitTime"
      required:
        - agencyTimeZoneOffset
        - alertIds
        - arrivalDelay
        - departureDelay
        - distance
        - duration
        - endTime
        - from
        - generalizedCost
        - legGeometry
        - mode
        - pathway
        - realTime
        - startTime
        - to
        - transitLeg
    Message:
      type: string
      description: A hibaüzenet kódja.
      enum:
        - PLAN_OK
        - SYSTEM_ERROR
        - GRAPH_UNAVAILABLE
        - PLANNER_SERVICE_UNAVAILABLE
        - OUTSIDE_BOUNDS
        - PATH_NOT_FOUND
        - NO_TRANSIT_TIMES
        - REQUEST_TIMEOUT
        - BOGUS_PARAMETER
        - GEOCODE_FROM_NOT_FOUND
        - GEOCODE_TO_NOT_FOUND
        - GEOCODE_FROM_TO_NOT_FOUND
        - TOO_CLOSE
        - LOCATION_NOT_ACCESSIBLE
        - MISSING_MODE
        - GEOCODE_FROM_AMBIGUOUS
        - GEOCODE_TO_AMBIGUOUS
        - GEOCODE_FROM_TO_AMBIGUOUS
        - UNDERSPECIFIED_TRIANGLE
        - TRIANGLE_NOT_AFFINE
        - TRIANGLE_OPTIMIZE_TYPE_NOT_SET
        - TRIANGLE_VALUES_NOT_SET
      example: OUTSIDE_BOUNDS
    MetadataResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: A válasz státusz kódja.
          example: 200
        currentTime:
          type: integer
          format: int64
          description: Az aktuális szerveridő ezredmásodpercben.
          example: 1625747515786
        data:
          $ref: "#/components/schemas/TransitEntryWithReferencesTransitMetadata"
        status:
          $ref: "#/components/schemas/Status"
        text:
          type: string
          description: A válasz szövege.
          example: OK
        version:
          type: integer
          format: int32
          description: A válasz API verziója.
          example: 3
      required:
        - code
        - currentTime
        - data
        - status
        - text
        - version
    MobileTransitReferences:
      type: object
      properties:
        agencies:
          type: array
          description: Szolgáltatók referenciáinak listája.
          items:
            $ref: "#/components/schemas/TransitAgency"
        alerts:
          type: array
          description: Zavarok referenciáinak listája.
          items:
            $ref: "#/components/schemas/TransitAlert"
        routes:
          type: array
          description: Járatok referenciáinak listája.
          items:
            $ref: "#/components/schemas/TransitRoute"
        stops:
          type: array
          description: Megállók referenciáinak listája.
          items:
            $ref: "#/components/schemas/TransitStop"
        trips:
          type: array
          description: Menetek referenciáinak listája.
          items:
            $ref: "#/components/schemas/TransitTrip"
    MultiRouteDetailsMethodResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: A válasz státusz kódja.
          example: 200
        currentTime:
          type: integer
          format: int64
          description: Az aktuális szerveridő ezredmásodpercben.
          example: 1625747515786
        data:
          $ref: "#/components/schemas/TransitListEntryWithReferencesTransitRouteDetails"
        status:
          $ref: "#/components/schemas/Status"
        text:
          type: string
          description: A válasz szövege.
          example: OK
        version:
          type: integer
          format: int32
          description: A válasz API verziója.
          example: 3
      required:
        - code
        - currentTime
        - data
        - status
        - text
        - version
    OTPTransitReferences:
      type: object
      properties:
        agencies:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/TransitAgency"
          description: Szolgáltatók referenciáinak listája.
        alerts:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/TransitAlert"
          description: Zavarok referenciáinak listája.
        routes:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/TransitRoute"
          description: Járatok referenciáinak listája.
        stops:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/TransitStop"
          description: Megállók referenciáinak listája.
        trips:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/TransitTrip"
          description: Menetek referenciáinak listája.
    OnboardDepartPosition:
      type: object
      properties:
        accuracy:
          type: number
          format: double
          description: A pontossága egy pozició pontnak méterben.
          example: 100
        lat:
          type: number
          format: double
          description: A szélességi koordinátája egy pozició pontnak.
          example: 47.497313
        lon:
          type: number
          format: double
          description: A hosszúsági koordinátája egy pozició pontnak.
          example: 19.064683
        speed:
          type: number
          format: double
          description: A sebesség egy pozició pontban m/s-ban.
          example: 8
        timestamp:
          type: integer
          format: int64
          description: Az időpontja egy pozició pontnak epoch másodpercben a szerver órája szerint.
          example: 1644829176
      required:
        - lat
        - lon
        - timestamp
    OnboardDepartSearchMethodResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: A válasz státusz kódja.
          example: 200
        currentTime:
          type: integer
          format: int64
          description: Az aktuális szerveridő ezredmásodpercben.
          example: 1625747515786
        data:
          $ref: "#/components/schemas/TransitListEntryWithReferencesTransitVehicle"
        status:
          $ref: "#/components/schemas/Status"
        text:
          type: string
          description: A válasz szövege.
          example: OK
        version:
          type: integer
          format: int32
          description: A válasz API verziója.
          example: 3
      required:
        - code
        - currentTime
        - data
        - status
        - text
        - version
    OptimizeType:
      type: string
      enum:
        - BEST
        - WALK
        - TRANSFERS
    PatternStatistics:
      type: object
      description: Útitervminták engedélyezése esetén a minták időtartam-adatai.
      properties:
        avg:
          type: integer
          format: int64
          description: Átlag érték. Akkor van kitöltve, ha az adatok megegyeznek.
        max:
          type: integer
          format: int64
          description: Maximum érték. Akkor van kitöltve, ha az adatok különbözőek.
        min:
          type: integer
          format: int64
          description: Minimum érték. Akkor van kitöltve, ha az adatok különbözőek.
        text:
          type: string
          description: A klienseken megjelenített szöveg.
      required:
        - text
    Place:
      type: object
      description: Tranzit láb esetén a köztes megállók a láb kezdete és végződése között.
      properties:
        arrival:
          type: string
          format: date-time
          description: A helyre érkezés időpontja ezredmásodpercben.
        departure:
          type: string
          format: date-time
          description: A helyről való indulás időpontja ezredmásodpercben.
        lat:
          type: number
          format: double
          description: A hely szélességi koordinátája.
          example: 47.47430103584126
        lon:
          type: number
          format: double
          description: A hely hosszúsági koordinátája.
          example: 19.071962345420864
        name:
          type: string
          description: Megálló esetén a megálló neve, POI-nál a POI neve.
          example: realCity ITS Kft.
        orig:
          type: string
          description: Az indulási és az érkezési hely címkéje. Az első és az utolsó útvonal lábon van kitöltve.
          example: realCity ITS Kft.
        platformCode:
          type: string
          description: A megálló peron-kódja, ha a hely egy megálló.
          example: "1"
        stopCode:
          type: string
          description: A megálló kódja, ha a hely egy megálló.
          example: "110452"
        stopId:
          type: string
          description: A megálló azonosítója, ha a hely egy megálló.
          example: BKK_110452
        stopIndex:
          type: integer
          format: int32
          description: A megálló indexe, ha a hely egy megálló.
          example: 10
        stopSequence:
          type: integer
          format: int32
          description: A megálló sorszáma a meneten, ha a hely egy megálló.
          example: 10
        ticketingLocation:
          $ref: "#/components/schemas/TicketingLocation"
      required:
        - name
    PlaceType:
      type: string
      description: A jegyértékesítési hely típusa.
      enum:
        - CUSTOMER_CENTER
        - CASHIER
        - VENDING_MACHINE
        - RESELLER
      example: RESELLER
    PlanTripResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: A válasz státusz kódja.
          example: 200
        currentTime:
          type: integer
          format: int64
          description: Az aktuális szerveridő ezredmásodpercben.
          example: 1625747515786
        data:
          $ref: "#/components/schemas/TransitEntryWithReferencesResponse"
        status:
          $ref: "#/components/schemas/Status"
        text:
          type: string
          description: A válasz szövege.
          example: OK
        version:
          type: integer
          format: int32
          description: A válasz API verziója.
          example: 3
      required:
        - code
        - currentTime
        - data
        - status
        - text
        - version
    PlannerError:
      type: object
      description: A hibát tartalmazza, ha nem sikerült a tervezés.
      properties:
        id:
          type: integer
          format: int32
          description: A hibaüzenet azonosítója.
          example: 0
        message:
          $ref: "#/components/schemas/Message"
        missing:
          type: array
          description: A rossz paraméterek listája.
          example:
            - from
          items:
            type: string
            description: A rossz paraméterek listája.
            example: "[\"from\"]"
        noPath:
          type: boolean
          description: Igaz, ha nem sikerült útvonalat találni.
          example: true
      required:
        - id
        - message
        - msg
        - noPath
    ReferencesMethodErrors:
      type: object
      properties:
        agencyIds:
          type: array
          description: A szolgáltató ID-k, amelyek feloldása sikertelen volt.
          example: BKK
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        alertIds:
          type: array
          description: A zavar ID-k, amelyek feloldása sikertelen volt.
          example: BKK_bkkinfo-81404
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        routeIds:
          type: array
          description: A járat ID-k, amelyek feloldása sikertelen volt.
          example: BKK_3040
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        stopIds:
          type: array
          description: A megálló ID-k, amelyek feloldása sikertelen volt.
          example: BKK_F00001
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
      required:
        - agencyIds
        - alertIds
        - routeIds
        - stopIds
    ReferencesMethodResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: A válasz státusz kódja.
          example: 200
        currentTime:
          type: integer
          format: int64
          description: Az aktuális szerveridő ezredmásodpercben.
          example: 1625747515786
        data:
          $ref: "#/components/schemas/TransitEntryWithReferencesReferencesMethodResult"
        status:
          $ref: "#/components/schemas/Status"
        text:
          type: string
          description: A válasz szövege.
          example: OK
        version:
          type: integer
          format: int32
          description: A válasz API verziója.
          example: 3
      required:
        - code
        - currentTime
        - data
        - status
        - text
        - version
    ReferencesMethodResult:
      type: object
      description: A lekért adat.
      properties:
        errors:
          $ref: "#/components/schemas/ReferencesMethodErrors"
      required:
        - errors
    ReferencesSchema:
      type: string
      default: "true"
      enum:
        - "true"
        - "false"
        - compact
        - agencies
        - routes
        - trips
        - stops
        - alerts
        - stations
    RelativeDirection:
      type: string
      description: A lépés iránya.
      enum:
        - DEPART
        - HARD_LEFT
        - LEFT
        - SLIGHTLY_LEFT
        - CONTINUE
        - SLIGHTLY_RIGHT
        - RIGHT
        - HARD_RIGHT
        - CIRCLE_CLOCKWISE
        - CIRCLE_COUNTERCLOCKWISE
        - ELEVATOR
        - UTURN_LEFT
        - UTURN_RIGHT
      example: LEFT
    Response:
      type: object
      description: A lekért adat.
      properties:
        error:
          $ref: "#/components/schemas/PlannerError"
        plan:
          $ref: "#/components/schemas/TripPlan"
        requestParameters:
          type: object
          additionalProperties:
            type: string
            description: A tervezési paraméterek.
          description: A tervezési paraméterek.
      required:
        - requestParameters
    RouteDetailsForStopMethodResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: A válasz státusz kódja.
          example: 200
        currentTime:
          type: integer
          format: int64
          description: Az aktuális szerveridő ezredmásodpercben.
          example: 1625747515786
        data:
          $ref: "#/components/schemas/TransitListEntryWithReferencesTransitRoute"
        status:
          $ref: "#/components/schemas/Status"
        text:
          type: string
          description: A válasz szövege.
          example: OK
        version:
          type: integer
          format: int32
          description: A válasz API verziója.
          example: 3
      required:
        - code
        - currentTime
        - data
        - status
        - text
        - version
    RouteDetailsMethodResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: A válasz státusz kódja.
          example: 200
        currentTime:
          type: integer
          format: int64
          description: Az aktuális szerveridő ezredmásodpercben.
          example: 1625747515786
        data:
          $ref: "#/components/schemas/TransitEntryWithReferencesTransitRouteDetails"
        status:
          $ref: "#/components/schemas/Status"
        text:
          type: string
          description: A válasz szövege.
          example: OK
        version:
          type: integer
          format: int32
          description: A válasz API verziója.
          example: 3
      required:
        - code
        - currentTime
        - data
        - status
        - text
        - version
    RouteDisplayedLeg:
      type: object
      allOf:
        - $ref: "#/components/schemas/DisplayedLeg"
        - type: object
          properties:
            hasAlert:
              type: boolean
              description: Jelzi, hogy a lábon található aktív zavar.
              example: true
            routeId:
              type: string
              description: A lábon használt járat azonosítója.
              example: BKK_MP53
            routeIds:
              type: array
              description: Útiterv minták esetén, a mintához tartozó más útitervek megfelelő lábaiban használt járatok azonosítóinak listája (alternatív járatok listája).
              example:
                - BKK_MP53
              items:
                type: string
                description: Útiterv minták esetén, a mintához tartozó más útitervek megfelelő lábaiban használt járatok azonosítóinak listája (alternatív járatok listája).
                example: "[\"BKK_MP53\"]"
            wait:
              $ref: "#/components/schemas/WaitTime"
            wheelchairAccessible:
              type: boolean
              description: Jelzi, hogy a láb akadálymentes.
              example: true
      required:
        - hasAlert
        - name
        - routeId
        - routeIds
        - time
        - type
        - walkTo
        - wheelchairAccessible
    ScheduleForStopOTPMethodResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: A válasz státusz kódja.
          example: 200
        currentTime:
          type: integer
          format: int64
          description: Az aktuális szerveridő ezredmásodpercben.
          example: 1625747515786
        data:
          $ref: "#/components/schemas/TransitEntryWithReferencesTransitSchedule"
        status:
          $ref: "#/components/schemas/Status"
        text:
          type: string
          description: A válasz szövege.
          example: OK
        version:
          type: integer
          format: int32
          description: A válasz API verziója.
          example: 3
      required:
        - code
        - currentTime
        - data
        - status
        - text
        - version
    SearchMethodResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: A válasz státusz kódja.
          example: 200
        currentTime:
          type: integer
          format: int64
          description: Az aktuális szerveridő ezredmásodpercben.
          example: 1625747515786
        data:
          $ref: "#/components/schemas/TransitEntryWithReferencesTransitSearch"
        status:
          $ref: "#/components/schemas/Status"
        text:
          type: string
          description: A válasz szövege.
          example: OK
        version:
          type: integer
          format: int32
          description: A válasz API verziója.
          example: 3
      required:
        - code
        - currentTime
        - data
        - status
        - text
        - version
    ServiceDate:
      type: string
      description: Menetrendi nap
      example: "20241231"
    StatisticsResponse:
      type: object
      properties:
        result:
          type: string
          description: Egyszerű válasz.
          example: OK
      required:
        - result
    Status:
      type: string
      description: A válasz státusza.
      enum:
        - OK
        - NOT_MODIFIED
        - MOVED_TEMPORARILY
        - INVALID_VALUE
        - OUTSIDE_BOUNDS
        - BOGUS_PARAMETER
        - TOO_CLOSE
        - LOCATION_NOT_ACCESSIBLE
        - MISSING_MODE
        - LIMIT_EXCEEDED
        - NO_ROUTE_ID_PROVIDED
        - NOT_FOUND
        - PATH_NOT_FOUND
        - NO_TRANSIT_TIMES
        - NOT_OPERATING
        - REQUEST_TIMEOUT
        - ERROR_NO_GRAPH
        - UNKNOWN_ERROR
        - ERROR_BIKE_RENTAL_SERVICE
        - ERROR_TICKETING_SERVICE
        - ERROR_TRANSIT_INDEX_SERVICE
        - ERROR_PATCH_SERVICE
        - PLANNER_SERVICE_UNAVAILABLE
      example: OK
    StopTimeType:
      type: string
      enum:
        - ARRIVAL
        - DEPARTURE
        - ARRIVAL_AND_DEPARTURE
    StopsForLocationResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: A válasz státusz kódja.
          example: 200
        currentTime:
          type: integer
          format: int64
          description: Az aktuális szerveridő ezredmásodpercben.
          example: 1625747515786
        data:
          $ref: "#/components/schemas/TransitListEntryWithReferencesTransitStop"
        status:
          $ref: "#/components/schemas/Status"
        text:
          type: string
          description: A válasz szövege.
          example: OK
        version:
          type: integer
          format: int32
          description: A válasz API verziója.
          example: 3
      required:
        - code
        - currentTime
        - data
        - status
        - text
        - version
    TicketingDisplayedLeg:
      type: object
      allOf:
        - $ref: "#/components/schemas/DisplayedLeg"
      required:
        - name
        - time
        - type
        - walkTo
    TicketingLocation:
      type: object
      description: A jegyértékesítési pontok listája.
      properties:
        address:
          type: string
          description: A jegyértékesítési hely címe.
          example: Viktor Hugo utcai alulj. Lehel tér
        cashAccepted:
          type: boolean
          description: Jelzi, hogy a jegyértékesítési helyen elfogadnak készpénzt.
          example: true
        creditCardsAccepted:
          type: boolean
          description: Jelzi, hogy a jegyértékesítési helyen elfogadnak bankkártyát.
          example: true
        description:
          type: string
          description: A jegyértékesítési hely leírása.
          example: Nemzeti Dohánybolt
        id:
          type: string
          description: A jegyértékesítési hely azonosítója.
          example: "2306"
        lastModified:
          type: string
          format: date-time
          description: A jegyértékesítési hely utolsó frissítésének időpontja ezredmásodpercben.
        lat:
          type: number
          format: double
          description: A jegyértékesítési hely szélességi koordinátája.
          example: 47.517458
        lon:
          type: number
          format: double
          description: A jegyértékesítési hely hosszúsági koordinátája.
          example: 19.060594
        openingPeriods:
          type: array
          description: A jegyértékesítési hely nyitvatartása.
          items:
            $ref: "#/components/schemas/TicketingPeriod"
        operator:
          type: string
          description: A jegyértékesítési hely üzemeltetője.
          example: Kisviszonteladó
        passIdCreation:
          type: boolean
          description: Lehet-e a helyszínen igazolványt csináltatni.
          example: true
        place:
          type: string
          description: A jegyértékesítési hely helye.
          example: Budapest, XIII. kerület
        products:
          type: array
          description: Az árusított termékek azonosítói.
          items:
            type: string
            description: Az árusított termékek azonosítói.
        state:
          $ref: "#/components/schemas/TicketingState"
        ticketPassExchange:
          type: boolean
          description: Be lehet-e váltani a helyszínen jegyet.
          example: true
        type:
          $ref: "#/components/schemas/PlaceType"
        visible:
          type: boolean
          description: Ha `false`, akkor hibás az adat, így a felületen elrejtésre kerül.
          example: true
      required:
        - cashAccepted
        - creditCardsAccepted
        - id
        - lastModified
        - lat
        - lon
        - passIdCreation
        - ticketPassExchange
        - visible
    TicketingMethodResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: A válasz státusz kódja.
          example: 200
        currentTime:
          type: integer
          format: int64
          description: Az aktuális szerveridő ezredmásodpercben.
          example: 1625747515786
        data:
          $ref: "#/components/schemas/TransitEntryWithReferencesTransitTicketing"
        status:
          $ref: "#/components/schemas/Status"
        text:
          type: string
          description: A válasz szövege.
          example: OK
        version:
          type: integer
          format: int32
          description: A válasz API verziója.
          example: 3
      required:
        - code
        - currentTime
        - data
        - status
        - text
        - version
    TicketingPeriod:
      type: object
      description: A jegyértékesítési hely nyitvatartása.
      properties:
        closes:
          type: string
          description: Zárási idő HH:mm formátumban.
          example: "23:59"
        closesSeconds:
          type: integer
          format: int32
          description: Zárási idő másodpercben.
          example: 86340
        dayOfWeek:
          $ref: "#/components/schemas/DayOfWeek"
        opens:
          type: string
          description: Nyitási idő HH:mm formátumban.
          example: "00:00"
        opensSeconds:
          type: integer
          format: int32
          description: Nyitási idő másodpercben.
          example: 0
      required:
        - closesSeconds
        - dayOfWeek
        - opensSeconds
    TicketingProduct:
      type: object
      description: A termékek listája.
      properties:
        groupId:
          type: string
          description: A termék csoportjának azonosítója.
          example: "3"
        groupName:
          type: string
          description: A termék csoportjának neve.
          example: Havi bérletek
        id:
          type: string
          description: A termék azonosítója.
          example: "69"
        lastModified:
          type: string
          format: date-time
          description: A termék utolsó frissítésének időpontja ezred másodpercben.
        name:
          type: string
          description: A termék neve.
          example: Hév bérlet 20 km
        price:
          type: string
          description: A termék ára.
          example: 14200 Ft
        url:
          type: string
          description: A termék linkje.
          example: https://bkk.hu/jegyek-es-berletek/arak/havi-berletek/hev-berlet-20-km.79/
        visible:
          type: boolean
          description: Ha `false`, akkor hibás az adat, így a felületen elrejtésre kerül.
          example: true
      required:
        - id
        - lastModified
        - visible
    TicketingState:
      type: string
      description: A jegyértékesítési hely állapota.
      enum:
        - PLANNED
        - OPERATIONAL
        - INOPERATIVE
      example: OPERATIONAL
    TransferDirection:
      type: string
      description: A csatlakozás iránya.
      enum:
        - FEEDER
        - FETCHER
      example: FETCHER
    TransferStatus:
      type: string
      description: A csatlakozás állapota.
      enum:
        - NO_DATA
        - OK
        - WAIT
        - ABORTED
      example: OK
    TransitAgency:
      type: object
      description: Szolgáltatók referenciáinak listája.
      properties:
        id:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        lang:
          type: string
          description: A szolgáltató nyelve.
          example: hu
        name:
          type: string
          description: A szolgáltató neve.
          example: BKK
        phone:
          type: string
          description: A szolgáltató telefonszáma.
          example: +36 1 2 345 678
        timezone:
          type: string
          description: A szolgáltató időzónája.
          example: Europe/Budapest
        url:
          type: string
          description: A szolgáltató linkje.
          example: https://www.bkk.hu
      required:
        - id
        - name
        - timezone
        - url
    TransitAlert:
      type: object
      description: Zavarok referenciáinak listája.
      properties:
        description:
          $ref: "#/components/schemas/TranslatedString"
        disableApp:
          type: boolean
          description: A zavar hatására használhatatlan lesz-e az alkalmazás.
        end:
          type: integer
          format: int64
          description: A zavar végének időpontja másodpercben.
          example: 1626040799
        endText:
          $ref: "#/components/schemas/TranslatedString"
        header:
          $ref: "#/components/schemas/TranslatedString"
        id:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        modifiedTime:
          type: integer
          format: int64
          description: A zavar utolsó módosításának időpontja másodpercben.
          example: 1623333927
        priority:
          type: integer
          format: int32
          description: A zavar priorítása.
        routeIds:
          type: array
          description: A zavar által érintett járatok azonosítóinak listája.
          example:
            - BKK_5100
            - BKK_5100
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        routes:
          type: array
          description: A zavar által érintett járatok listája.
          items:
            $ref: "#/components/schemas/TransitAlertRoute"
        start:
          type: integer
          format: int64
          description: A zavar kezdő időpontja másodpercben.
          example: 1623362400
        startText:
          $ref: "#/components/schemas/TranslatedString"
        stopIds:
          type: array
          description: A zavar által érintett megállók azonosítóinak listája.
          example:
            - BKK_F01086
            - BKK_F01086
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        timestamp:
          type: integer
          format: int64
          description: A zavar időbélyege másodpercben.
          example: 1625747229
        url:
          $ref: "#/components/schemas/TranslatedString"
        vehicleRouteTypes:
          type: array
          description: Az érintett elemek járat-típusai.
          example: TRAM
          items:
            type: string
            description: Az érintett elemek járat-típusai.
            enum:
              - BICYCLE
              - CAR
              - WALK
              - BUS
              - CABLE_CAR
              - COACH
              - FERRY
              - FUNICULAR
              - GONDOLA
              - RAIL
              - SUBURBAN_RAILWAY
              - SUBWAY
              - TRAM
              - TROLLEYBUS
              - LOCAL
              - TRANSIT
            example: TRAM
      required:
        - description
        - header
        - id
        - modifiedTime
        - routeIds
        - routes
        - stopIds
        - timestamp
        - vehicleRouteTypes
    TransitAlertDetails:
      type: object
      description: A lekért adat.
      properties:
        routeDetails:
          type: array
          description: A zavarhoz tartozó járatok részletei.
          items:
            $ref: "#/components/schemas/TransitRouteDetails"
      required:
        - routeDetails
    TransitAlertGroup:
      type: object
      properties:
        alertIds:
          type: array
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        id:
          type: string
        name:
          type: string
    TransitAlertRoute:
      type: object
      description: A zavar által érintett járatok listája.
      properties:
        affectedEntityDescription:
          $ref: "#/components/schemas/TranslatedString"
        effectType:
          $ref: "#/components/schemas/EffectType"
        header:
          $ref: "#/components/schemas/TranslatedString"
        routeId:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        stopIds:
          type: array
          description: A zavar által érintett megállók azonosítóinak listája a járaton.
          example:
            - BKK_F01086
            - BKK_F01086
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
      required:
        - effectType
        - header
        - routeId
        - stopIds
    TransitArrivalsAndDepartures:
      type: object
      description: A lekért adat.
      properties:
        alertIds:
          type: array
          description: A megállóhoz tartozó aktív zavarok.
          example:
            - BKK_bkkinfo-75685
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        nearbyStopIds:
          type: array
          description: A közeli megállók azonosítói.
          example:
            - BKK_F01029
            - BKK_F01029
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        routeIds:
          type: array
          description: A megállóhoz tartozó járatok azonosítói.
          example:
            - BKK_VP06
            - BKK_0090
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        stopId:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        stopTimes:
          type: array
          description: A megállóhoz tartozó menetrendi bejegyzések.
          items:
            $ref: "#/components/schemas/TransitScheduleStopTime"
      required:
        - alertIds
        - nearbyStopIds
        - routeIds
        - stopId
        - stopTimes
    TransitBikeRentalStation:
      type: object
      description: A lekért adatok listája.
      properties:
        bikes:
          type: integer
          format: int32
          description: Az állomáson elérhető kerékpárok száma.
          example: 5
        code:
          type: string
          description: Az állomás kódja.
          example: "0213"
        id:
          type: string
          description: Az állomás azonosítója.
          example: "42711896"
        lat:
          type: number
          format: double
          description: Az állomás szélességi koordinátája.
          example: 47.51032
        lon:
          type: number
          format: double
          description: Az állomás hosszúsági koordinátája.
          example: 19.028615
        name:
          type: string
          description: Az állomás neve.
          example: Millenáris
        spaces:
          type: integer
          format: int32
          description: Az állomás összes helyének száma. Ez mindig fix 999.
          example: 999
        style:
          $ref: "#/components/schemas/TransitBikeRentalStationStyle"
        type:
          type: string
          description: Az állomás típusa.
          example: stele
      required:
        - bikes
        - code
        - id
        - lat
        - lon
        - name
        - spaces
    TransitBikeRentalStationStyle:
      type: object
      description: Az állomáshoz tartozó stílus.
      properties:
        icon:
          $ref: "#/components/schemas/TransitBikeRentalStationStyleIcon"
      required:
        - icon
    TransitBikeRentalStationStyleIcon:
      type: object
      description: A kerékpárkölcsönző állomáshoz megjelenítendő ikon.
      properties:
        name:
          type: string
          description: Az ikon neve.
          example: vehicle-rental/mol-bubi
      required:
        - name
    TransitCoordinatePoint:
      type: object
      description: A jármű pozíciója.
      properties:
        lat:
          type: number
          format: float
          description: Szélességi koordináta.
          example: 47.47375
        lon:
          type: number
          format: float
          description: Hosszúsági koordináta.
          example: 19.049086
      required:
        - lat
        - lon
    TransitDepartureGroup:
      type: object
      description: A lekért adatok listája.
      properties:
        headsign:
          type: string
          description: A csoporthoz tartozó célállomás.
          example: Újbuda-központ M
        routeId:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        stopTimes:
          type: array
          description: A csoport menetrendi bejegyzései.
          items:
            $ref: "#/components/schemas/TransitScheduleStopTime"
      required:
        - headsign
        - routeId
        - stopTimes
    TransitEntityType:
      type: string
      enum:
        - STOP
        - STATION
        - ROUTE
        - RELATED_ALERT
    TransitEntryWithReferencesReferencesMethodResult:
      type: object
      description: A válasz adat.
      properties:
        class:
          type: string
          description: Az adat típusa. Egy entitás esetén "entryWithReferences".
          example: entryWithReferences
        entry:
          $ref: "#/components/schemas/ReferencesMethodResult"
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási és érkezési idő típusú lekéréseknél használjuk.
          example: false
        references:
          $ref: "#/components/schemas/TransitReferences"
      required:
        - class
        - entry
        - limitExceeded
    TransitEntryWithReferencesResponse:
      type: object
      description: A válasz adat.
      properties:
        class:
          type: string
          description: Az adat típusa. Egy entitás esetén "entryWithReferences".
          example: entryWithReferences
        entry:
          $ref: "#/components/schemas/Response"
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási és érkezési idő típusú lekéréseknél használjuk.
          example: false
        references:
          $ref: "#/components/schemas/TransitReferences"
      required:
        - class
        - entry
        - limitExceeded
    TransitEntryWithReferencesTransitAlertDetails:
      type: object
      description: A válasz adat.
      properties:
        class:
          type: string
          description: Az adat típusa. Egy entitás esetén "entryWithReferences".
          example: entryWithReferences
        entry:
          $ref: "#/components/schemas/TransitAlertDetails"
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási és érkezési idő típusú lekéréseknél használjuk.
          example: false
        references:
          $ref: "#/components/schemas/TransitReferences"
      required:
        - class
        - entry
        - limitExceeded
    TransitEntryWithReferencesTransitArrivalsAndDepartures:
      type: object
      description: A válasz adat.
      properties:
        class:
          type: string
          description: Az adat típusa. Egy entitás esetén "entryWithReferences".
          example: entryWithReferences
        entry:
          $ref: "#/components/schemas/TransitArrivalsAndDepartures"
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási és érkezési idő típusú lekéréseknél használjuk.
          example: false
        references:
          $ref: "#/components/schemas/TransitReferences"
      required:
        - class
        - entry
        - limitExceeded
    TransitEntryWithReferencesTransitMetadata:
      type: object
      description: A válasz adat.
      properties:
        class:
          type: string
          description: Az adat típusa. Egy entitás esetén "entryWithReferences".
          example: entryWithReferences
        entry:
          $ref: "#/components/schemas/TransitMetadata"
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási és érkezési idő típusú lekéréseknél használjuk.
          example: false
        references:
          $ref: "#/components/schemas/TransitReferences"
      required:
        - class
        - entry
        - limitExceeded
    TransitEntryWithReferencesTransitRouteDetails:
      type: object
      description: A válasz adat.
      properties:
        class:
          type: string
          description: Az adat típusa. Egy entitás esetén "entryWithReferences".
          example: entryWithReferences
        entry:
          $ref: "#/components/schemas/TransitRouteDetails"
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási és érkezési idő típusú lekéréseknél használjuk.
          example: false
        references:
          $ref: "#/components/schemas/TransitReferences"
      required:
        - class
        - entry
        - limitExceeded
    TransitEntryWithReferencesTransitSchedule:
      type: object
      description: A válasz adat.
      properties:
        class:
          type: string
          description: Az adat típusa. Egy entitás esetén "entryWithReferences".
          example: entryWithReferences
        entry:
          $ref: "#/components/schemas/TransitSchedule"
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási és érkezési idő típusú lekéréseknél használjuk.
          example: false
        references:
          $ref: "#/components/schemas/TransitReferences"
      required:
        - class
        - entry
        - limitExceeded
    TransitEntryWithReferencesTransitSearch:
      type: object
      description: A válasz adat.
      properties:
        class:
          type: string
          description: Az adat típusa. Egy entitás esetén "entryWithReferences".
          example: entryWithReferences
        entry:
          $ref: "#/components/schemas/TransitSearch"
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási és érkezési idő típusú lekéréseknél használjuk.
          example: false
        references:
          $ref: "#/components/schemas/TransitReferences"
      required:
        - class
        - entry
        - limitExceeded
    TransitEntryWithReferencesTransitTicketing:
      type: object
      description: A válasz adat.
      properties:
        class:
          type: string
          description: Az adat típusa. Egy entitás esetén "entryWithReferences".
          example: entryWithReferences
        entry:
          $ref: "#/components/schemas/TransitTicketing"
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási és érkezési idő típusú lekéréseknél használjuk.
          example: false
        references:
          $ref: "#/components/schemas/TransitReferences"
      required:
        - class
        - entry
        - limitExceeded
    TransitEntryWithReferencesTransitTripDetailsOTP:
      type: object
      description: A válasz adat.
      properties:
        class:
          type: string
          description: Az adat típusa. Egy entitás esetén "entryWithReferences".
          example: entryWithReferences
        entry:
          $ref: "#/components/schemas/TransitTripDetailsOTP"
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási és érkezési idő típusú lekéréseknél használjuk.
          example: false
        references:
          $ref: "#/components/schemas/TransitReferences"
      required:
        - class
        - entry
        - limitExceeded
    TransitListEntryWithReferencesTransitBikeRentalStation:
      type: object
      description: A válasz adat.
      properties:
        class:
          type: string
          description: Az adat típusa. Lista esetén "listWithReferences".
          example: listWithReferences
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási és érkezési idő típusú lekéréseknél használjuk.
          example: false
        list:
          type: array
          description: A lekért adatok listája.
          items:
            $ref: "#/components/schemas/TransitBikeRentalStation"
        missingIds:
          type: array
          description: Az ID-k, amelyek feloldása sikertelen volt.
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        outOfRange:
          type: boolean
          description: Az értéke mindig `false`.
        references:
          $ref: "#/components/schemas/TransitReferences"
      required:
        - class
        - limitExceeded
        - list
        - outOfRange
    TransitListEntryWithReferencesTransitDepartureGroup:
      type: object
      description: A válasz adat.
      properties:
        class:
          type: string
          description: Az adat típusa. Lista esetén "listWithReferences".
          example: listWithReferences
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási és érkezési idő típusú lekéréseknél használjuk.
          example: false
        list:
          type: array
          description: A lekért adatok listája.
          items:
            $ref: "#/components/schemas/TransitDepartureGroup"
        missingIds:
          type: array
          description: Az ID-k, amelyek feloldása sikertelen volt.
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        outOfRange:
          type: boolean
          description: Az értéke mindig `false`.
        references:
          $ref: "#/components/schemas/TransitReferences"
      required:
        - class
        - limitExceeded
        - list
        - outOfRange
    TransitListEntryWithReferencesTransitRoute:
      type: object
      description: A válasz adat.
      properties:
        class:
          type: string
          description: Az adat típusa. Lista esetén "listWithReferences".
          example: listWithReferences
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási és érkezési idő típusú lekéréseknél használjuk.
          example: false
        list:
          type: array
          description: A lekért adatok listája.
          items:
            $ref: "#/components/schemas/TransitRoute"
        missingIds:
          type: array
          description: Az ID-k, amelyek feloldása sikertelen volt.
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        outOfRange:
          type: boolean
          description: Az értéke mindig `false`.
        references:
          $ref: "#/components/schemas/TransitReferences"
      required:
        - class
        - limitExceeded
        - list
        - outOfRange
    TransitListEntryWithReferencesTransitRouteDetails:
      type: object
      description: A válasz adat.
      properties:
        class:
          type: string
          description: Az adat típusa. Lista esetén "listWithReferences".
          example: listWithReferences
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási és érkezési idő típusú lekéréseknél használjuk.
          example: false
        list:
          type: array
          description: A lekért adatok listája.
          items:
            $ref: "#/components/schemas/TransitRouteDetails"
        missingIds:
          type: array
          description: Az ID-k, amelyek feloldása sikertelen volt.
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        outOfRange:
          type: boolean
          description: Az értéke mindig `false`.
        references:
          $ref: "#/components/schemas/TransitReferences"
      required:
        - class
        - limitExceeded
        - list
        - outOfRange
    TransitListEntryWithReferencesTransitStop:
      type: object
      description: A válasz adat.
      properties:
        class:
          type: string
          description: Az adat típusa. Lista esetén "listWithReferences".
          example: listWithReferences
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási és érkezési idő típusú lekéréseknél használjuk.
          example: false
        list:
          type: array
          description: A lekért adatok listája.
          items:
            $ref: "#/components/schemas/TransitStop"
        missingIds:
          type: array
          description: Az ID-k, amelyek feloldása sikertelen volt.
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        outOfRange:
          type: boolean
          description: Az értéke mindig `false`.
        references:
          $ref: "#/components/schemas/TransitReferences"
      required:
        - class
        - limitExceeded
        - list
        - outOfRange
    TransitListEntryWithReferencesTransitVehicle:
      type: object
      description: A válasz adat.
      properties:
        class:
          type: string
          description: Az adat típusa. Lista esetén "listWithReferences".
          example: listWithReferences
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási és érkezési idő típusú lekéréseknél használjuk.
          example: false
        list:
          type: array
          description: A lekért adatok listája.
          items:
            $ref: "#/components/schemas/TransitVehicle"
        missingIds:
          type: array
          description: Az ID-k, amelyek feloldása sikertelen volt.
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        outOfRange:
          type: boolean
          description: Az értéke mindig `false`.
        references:
          $ref: "#/components/schemas/TransitReferences"
      required:
        - class
        - limitExceeded
        - list
        - outOfRange
    TransitMetadata:
      type: object
      description: A lekért adat.
      properties:
        alertIds:
          type: array
          description: Az egész alkalmazásra vonatkozó aktív zavarok azonosítói.
          example:
            - BKK_bkkinfo-75685
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        boundingPolyLine:
          type: string
          description: A betöltött adatokat határoló sokszög vonala (polyline).
          example: o{sxFl}vaMjDpCf@\
        completeValidityEnd:
          type: string
          description: Menetrendi nap
          example: "20241231"
        completeValidityStart:
          type: string
          description: Menetrendi nap
          example: "20241231"
        dayTypes:
          type: object
          additionalProperties:
            type: string
            description: A menetrendi napok, és a hozzá tartozó napok típusát tartalmazó összerendelés egy hétre (az aktuális nap, és a következő 6).
            example: "{\"20210707\":\"WED\"}"
          description: A menetrendi napok, és a hozzá tartozó napok típusát tartalmazó összerendelés egy hétre (az aktuális nap, és a következő 6).
          example:
            "20210707": WED
        feedIds:
          type: array
          description: Az aktív adatforrások azonosítói.
          example:
            - https://www.bkk.hu:L2847-20210704
          items:
            type: string
            description: Az aktív adatforrások azonosítói.
            example: "[\"https://www.bkk.hu:L2847-20210704\"]"
        lowerLeftLatitude:
          type: number
          format: double
          description: A betöltött adatok területének befoglaló téglalapjának két sarokpontja.
          example: 47.14781490388629
        lowerLeftLongitude:
          type: number
          format: double
          description: A betöltött adatok területének befoglaló téglalapjának két sarokpontja.
          example: 47.14781490388629
        readableTime:
          type: string
          description: A szerver ideje ISO8601 formátumban.
          example: 2021-07-07T14:03:53.000Z
        time:
          type: integer
          format: int64
          description: Aktuális szerveridő ezredmásodpercben.
          example: 1625666633946
        timeZone:
          type: string
          description: A szerver tranzit adatainak időzónája.
          example: Europe/Budapest
        upperRightLatitude:
          type: number
          format: double
          description: A betöltött adatok területének befoglaló téglalapjának két sarokpontja.
          example: 47.14781490388629
        upperRightLongitude:
          type: number
          format: double
          description: A betöltött adatok területének befoglaló téglalapjának két sarokpontja.
          example: 47.14781490388629
        validityEnd:
          type: string
          description: Menetrendi nap
          example: "20241231"
        validityStart:
          type: string
          description: Menetrendi nap
          example: "20241231"
      required:
        - alertIds
        - boundingPolyLine
        - completeValidityEnd
        - completeValidityStart
        - dayTypes
        - feedIds
        - internalRequest
        - lowerLeftLatitude
        - lowerLeftLongitude
        - readableTime
        - time
        - timeZone
        - upperRightLatitude
        - upperRightLongitude
        - validityEnd
        - validityStart
    TransitPolyline:
      type: object
      description: A menethez tartozó kódolt minta (polyline).
      properties:
        length:
          type: integer
          format: int32
          description: A minta pontjainak száma.
          example: 3
        levels:
          type: string
          description: A minta magassági adatai (mindig üres).
        points:
          type: string
          description: A minta kódolt pontjai.
          example: o{sxFl}vaMjDpCf@\
      required:
        - length
        - levels
        - points
    TransitReferences:
      type: object
      description: A válaszhoz tartozó referenciák.
      oneOf:
        - $ref: "#/components/schemas/OTPTransitReferences"
        - $ref: "#/components/schemas/MobileTransitReferences"
    TransitRoute:
      type: object
      description: Járatok referenciáinak listája.
      properties:
        agencyId:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        bikesAllowed:
          type: boolean
          description: Kerékpár szállítása engedélyezett-e a járaton.
          example: false
        color:
          type: string
          deprecated: true
          description: "A járat színe. Deprecated: használjuk a `style` attribútumot helyette."
          example: FFD800
        description:
          type: string
          description: A járat neve. Ha egy | szerepel a névben, akkor a végállomásokat választja el amelyek külön sorokban megjeleníthetőek. COMPACT referenciák kérése esetében nincs kitöltve.
          example: Újbuda-központ M | Széll Kálmán tér M
        iconDisplayText:
          type: string
          deprecated: true
          description: "A járat ikonjának megjelenítési szövege. Deprecated: használjuk a `style` attribútumot helyette."
          example: "4"
        iconDisplayType:
          type: string
          deprecated: true
          description: "A járat ikonjának megjelenítési típusa. Deprecated: használjuk a `style` attribútumot helyette."
          example: BOX
        id:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        longName:
          type: string
          description: A járat hosszú neve.
        shortName:
          type: string
          description: A járat rövid neve.
          example: "4"
        sortOrder:
          type: integer
          format: int32
          description: A járat rendezési sorszáma a többi járathoz viszonyítva.
          example: 10
        style:
          $ref: "#/components/schemas/TransitRouteStyle"
        textColor:
          type: string
          deprecated: true
          description: "A járat szövegének színe. Deprecated: használjuk a `style` attribútumot helyette."
          example: "000000"
        type:
          $ref: "#/components/schemas/TraverseMode"
        url:
          type: string
          description: A járat linkje.
      required:
        - agencyId
        - bikesAllowed
        - color
        - id
        - sortOrder
        - style
        - textColor
        - type
    TransitRouteDetails:
      type: object
      description: A lekért adat.
      properties:
        agencyId:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        alertIds:
          type: array
          description: A járaton található aktív zavarok azonosítóinak listája.
          example:
            - BKK_bkkinfo-75685
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        bikesAllowed:
          type: boolean
          description: Kerékpár szállítása engedélyezett-e a járaton.
          example: false
        color:
          type: string
          deprecated: true
          description: "A járat színe. Deprecated: használjuk a `style` attribútumot helyette."
          example: FFD800
        description:
          type: string
          description: A járat neve. Ha egy | szerepel a névben, akkor a végállomásokat választja el amelyek külön sorokban megjeleníthetőek. COMPACT referenciák kérése esetében nincs kitöltve.
          example: Újbuda-központ M | Széll Kálmán tér M
        iconDisplayText:
          type: string
          deprecated: true
          description: "A járat ikonjának megjelenítési szövege. Deprecated: használjuk a `style` attribútumot helyette."
          example: "4"
        iconDisplayType:
          type: string
          deprecated: true
          description: "A járat ikonjának megjelenítési típusa. Deprecated: használjuk a `style` attribútumot helyette."
          example: BOX
        id:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        longName:
          type: string
          description: A járat hosszú neve.
        shortName:
          type: string
          description: A járat rövid neve.
          example: "4"
        sortOrder:
          type: integer
          format: int32
          description: A járat rendezési sorszáma a többi járathoz viszonyítva.
          example: 10
        style:
          $ref: "#/components/schemas/TransitRouteStyle"
        textColor:
          type: string
          deprecated: true
          description: "A járat szövegének színe. Deprecated: használjuk a `style` attribútumot helyette."
          example: "000000"
        type:
          $ref: "#/components/schemas/TraverseMode"
        url:
          type: string
          description: A járat linkje.
        variants:
          type: array
          description: A járathoz tartozó járat variánsok listája.
          items:
            $ref: "#/components/schemas/TransitRouteVariant"
      required:
        - agencyId
        - alertIds
        - bikesAllowed
        - color
        - id
        - sortOrder
        - style
        - textColor
        - type
        - variants
    TransitRouteSchedule:
      type: object
      description: A megállóhoz tartozó menetrend.
      properties:
        alertIds:
          type: array
          description: A járathoz tartozó aktív zavarok.
          example:
            - BKK_bkkinfo-75685
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        directions:
          type: array
          description: A menetrendi adatok irány szerint csoportosítva.
          items:
            $ref: "#/components/schemas/TransitRouteScheduleForDirection"
        routeId:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
      required:
        - alertIds
        - directions
        - routeId
    TransitRouteScheduleForDirection:
      type: object
      description: A menetrendi adatok irány szerint csoportosítva.
      properties:
        directionId:
          type: string
          description: Az irány azonosítója.
          example: "0"
        groups:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/TransitScheduleGroup"
          description: Célmegálló és a hozzá tartozó menetrendi adatok összerendelése.
        stopTimes:
          type: array
          description: Az irányhoz tartozó menetrendi bejegyzések.
          items:
            $ref: "#/components/schemas/TransitScheduleStopTime"
      required:
        - groups
        - stopTimes
    TransitRouteStyle:
      type: object
      description: A járat megjelenítési stílusa.
      properties:
        color:
          type: string
          description: A járat színe.
          example: 009FE3
        groupId:
          type: integer
          format: int32
          description: A járathoz tartozó stílus-csoport azonosítója.
        icon:
          $ref: "#/components/schemas/TransitRouteStyleIcon"
        stop:
          $ref: "#/components/schemas/TransitStopStyle"
        vehicleIcon:
          $ref: "#/components/schemas/TransitVehicleStyleIcon"
      required:
        - color
        - groupId
        - icon
        - vehicleIcon
    TransitRouteStyleIcon:
      type: object
      description: A járathoz tartozó ikon stílusa.
      properties:
        text:
          type: string
          description: Az ikon felirata.
          example: "5"
        textColor:
          type: string
          description: Az ikon feliratának színe.
          example: FFFFFF
        type:
          $ref: "#/components/schemas/TransitRouteStyleIconType"
      required:
        - text
        - textColor
        - type
    TransitRouteStyleIconType:
      type: string
      description: Az ikon típusa.
      enum:
        - BOX
        - CIRCLE
      example: BOX
    TransitRouteVariant:
      type: object
      description: A járathoz tartozó járat variánsok listája.
      properties:
        bookableStopIds:
          type: array
          description: A járat variáns megálló azonosítói, amelyekre lehetséges lehet a foglalás.
          example:
            - BKK_F02477
            - BKK_F00308
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        direction:
          type: string
          description: A járat variáns iránya.
          example: "0"
        headsign:
          type: string
          description: A járat variáns célállomása.
          example: Újbuda-központ M
        mayRequireBooking:
          type: boolean
          description: Igaz, ha a járaton vannak olyan menetek, amelyeken szükséges lehet az előre foglalás.
          example: true
        name:
          type: string
          description: A járat variáns neve.
          example: 4-es (439)
        patternId:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        polyline:
          $ref: "#/components/schemas/TransitPolyline"
        routeId:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        stopIds:
          type: array
          description: A járat variáns megállóinak azonosítói.
          example:
            - BKK_F02477
            - BKK_F00308
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        type:
          type: string
          description: A járat variáns típusa.
          example: BKK_3040
      required:
        - bookableStopIds
        - headsign
        - mayRequireBooking
        - polyline
        - stopIds
    TransitSchedule:
      type: object
      description: A lekért adat.
      properties:
        alertIds:
          type: array
          description: A megállóhoz tartozó aktív zavarok azonosítói.
          example:
            - BKK_bkkinfo-75685
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        date:
          type: string
          format: date
          description: A menetrendhez tartozó dátum.
        nearbyStopIds:
          type: array
          description: A közeli megállók azonosítói.
          example:
            - BKK_F01294
            - BKK_F01294
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        routeIds:
          type: array
          description: A menetrendhez tartozó járatok azonosítói.
          example:
            - BKK_3040
            - BKK_3060
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        schedules:
          type: array
          description: A megállóhoz tartozó menetrend.
          items:
            $ref: "#/components/schemas/TransitRouteSchedule"
        serviceDate:
          type: string
          description: Menetrendi nap
          example: "20241231"
        stopId:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
      required:
        - alertIds
        - date
        - nearbyStopIds
        - routeIds
        - schedules
        - serviceDate
        - stopId
    TransitScheduleGroup:
      type: object
      description: Célmegálló és a hozzá tartozó menetrendi adatok összerendelése.
      properties:
        description:
          type: string
          description: A menetrendi csoport leírása.
          example: M1-es Mexikói út felé
        groupId:
          type: string
          description: A menetrendi csoport azonosítója.
          example: Mexikói út
        headsign:
          type: string
          description: A menetrendi csoport célállomása.
          example: Mexikói út
      required:
        - description
        - groupId
        - headsign
    TransitScheduleStopTime:
      type: object
      description: Az irányhoz tartozó menetrendi bejegyzések.
      properties:
        alertIds:
          type: array
          description: A megállóhoz tartozó aktív zavarok azonosítóinak listája.
          example:
            - BKK_bkkinfo-75685
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        arrivalTime:
          type: integer
          format: int64
          description: A megállóba érkezés tervezett ideje epoch másodbercben. Az első megállónál hiányzik.
          example: 1625732820
        departureTime:
          type: integer
          format: int64
          description: A megállóból való indulás tervezett ideje epoch másodbercben. Az utolsó megállónál hiányzik.
          example: 1625732820
        dropOffAllowed:
          type: boolean
          description: Igaz, ha a megállóban engedélyezett-e a buszról való leszállás
          example: true
        groupIds:
          type: array
          description: A megálló csoportjának azonosítója.
          example:
            - Havanna utcai lakótelep
          items:
            type: string
            description: A megálló csoportjának azonosítója.
            example: "[\"Havanna utcai lakótelep\"]"
        mayRequireBooking:
          type: boolean
          description: Igaz, ha a menet legalább egy rákövetkező megállója foglalást igényel.
          example: true
        pickupAllowed:
          type: boolean
          description: Igaz, ha a megállóban engedélyezett-e a buszra való felszállás
          example: true
        predictedArrivalTime:
          type: integer
          format: int64
          description: A megállóba érkezés becsült ideje epoch másodbercben, ha a járathoz van valós idejű adat. Az első megállónál hiányzik.
          example: 1625732820
        predictedDepartureTime:
          type: integer
          format: int64
          description: A megállóból való becsült indulás ideje epoch másodbercben, ha a járathoz van valós idejű adat. Az utolsó megállónál hiányzik.
          example: 1625732820
        predictionScheduled:
          type: boolean
          description: Igaz, ha a menetrendi bejegyzéshez tartozó megálló időpontja tervezett. API v5 óta.
          example: true
        serviceDate:
          type: string
          description: Menetrendi nap
          example: "20241231"
        stopHeadsign:
          type: string
          description: A megállóban kijelzett célállomás.
          example: Havanna utcai lakótelep
        stopId:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        stopSequence:
          type: integer
          format: int32
          description: A menetrendi bejegyzéshez tartozó megálló sorszáma a meneten.
          example: 1
        tripId:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        uncertain:
          type: boolean
          description: Igaz, ha a menethez tartozó valós idejű adatok bizonytalanok.
          example: true
        vehicle:
          $ref: "#/components/schemas/TransitVehicle"
        wheelchairAccessible:
          type: boolean
          description: A bejegyzéshez tartozó menet alacsonypadlóssága.
          example: true
      required:
        - alertIds
        - mayRequireBooking
        - serviceDate
        - stopHeadsign
        - tripId
        - wheelchairAccessible
    TransitSearch:
      type: object
      description: A lekért adat.
      properties:
        alertGroups:
          type: array
          items:
            $ref: "#/components/schemas/TransitAlertGroup"
        alertIds:
          type: array
          description: Az illeszkedő zavarok azonosítói.
          example:
            - BKK_bkkinfo-75694
            - BKK_bkkinfo-75694
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        query:
          type: string
          description: A keresett kifejezés.
          example: BKK_bkkinfo-75694
        routeIds:
          type: array
          description: Az illeszkedő járatok azonosítói.
          example:
            - BKK_3040
            - BKK_3040
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        stopIds:
          type: array
          description: Az illeszkedő megállók azonosítói.
          example:
            - BKK_CSF01024
            - BKK_CSF01024
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
    TransitStop:
      type: object
      description: Megállók referenciáinak listája.
      properties:
        alertIds:
          type: array
          description: A megállóra vonatkozó aktív zavarok azonosítói.
          example:
            - BKK_bkkinfo-75685
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        code:
          type: string
          description: A megálló kódja.
          example: "110452"
        description:
          type: string
          description: A megálló leírása.
        direction:
          type: string
          description: A megálló iránya.
          example: "-47"
        id:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        lat:
          type: number
          format: double
          description: A megálló szélességi koordinátája.
          example: 47.427631
        locationSubType:
          type: string
          description: A megálló hely-altípusa.
          example: "0"
        locationType:
          type: integer
          format: int32
          description: A megálló hely-típusa.
          example: 0
        lon:
          type: number
          format: double
          description: A megálló hosszúsági koordinátája.
          example: 19.265759
        name:
          type: string
          description: A megálló neve.
          example: Nemzetközi Posta Kicserélő Központ
        parentStationId:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        platformCode:
          type: string
          description: A megálló peron-kódja.
          example: "0"
        routeIds:
          type: array
          description: A megállót érintő járatok azonosítói.
          example:
            - BKK_2005
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        stopColorType:
          type: string
          deprecated: true
          description: "A megálló színezésének típusa, az értéke mindig `BUS`. Deprecated: használjuk a `style` attribútumot."
          example: BUS
        style:
          $ref: "#/components/schemas/TransitStopStyle"
        type:
          type: string
          deprecated: true
          description: "A megálló típusa. Deprecated: használjuk a `style` attribútumot."
          enum:
            - BICYCLE
            - CAR
            - WALK
            - BUS
            - CABLE_CAR
            - COACH
            - FERRY
            - FUNICULAR
            - GONDOLA
            - RAIL
            - SUBURBAN_RAILWAY
            - SUBWAY
            - TRAM
            - TROLLEYBUS
            - LOCAL
            - TRANSIT
          example: BUS
        vertex:
          type: string
          description: A megálló utazástervező azonosítója, amelyet a `fromPlace` és a `toPlace` megadásához lehet használni.
          example: BKK:CSF01076
        wheelchairBoarding:
          type: boolean
          description: Akadálymentesített-e a megálló.
          example: true
      required:
        - direction
        - id
        - lat
        - locationType
        - lon
        - name
        - routeIds
        - style
        - wheelchairBoarding
    TransitStopStyle:
      type: object
      description: A megálló stílusa.
      properties:
        colors:
          type: array
          description: A megálló stílushoz tartozó színek tömbje.
          example:
            - 4CA22F
          items:
            type: string
            description: A megálló stílushoz tartozó színek tömbje.
            example: "[\"4CA22F\"]"
        image:
          type: string
          description: A megálló stílus képe.
          example: route-icon-M4
        type:
          $ref: "#/components/schemas/TransitStopStyleType"
      required:
        - colors
    TransitStopStyleType:
      type: string
      description: A megálló stílus típusa.
      enum:
        - PRIORITY
      example: PRIORITY
    TransitTicketing:
      type: object
      description: A lekért adat.
      properties:
        lastModifiedTime:
          type: integer
          format: int64
          description: A jegyértékesítési adatok legutóbbi módosulásának időpontja.
          example: 1625710328000
        locations:
          type: array
          description: A jegyértékesítési pontok listája.
          items:
            $ref: "#/components/schemas/TicketingLocation"
        oldestModifiedTime:
          type: integer
          format: int64
          description: A legrégebb óta módosított értékesítési hely vagy termék módosításának időpontja.
          example: 1562932460000
        products:
          type: array
          description: A termékek listája.
          items:
            $ref: "#/components/schemas/TicketingProduct"
      required:
        - lastModifiedTime
        - locations
        - oldestModifiedTime
        - products
    TransitTransfer:
      type: object
      description: Menethez kapcsolódó csatlakozások ebben a megállóban.
      properties:
        direction:
          $ref: "#/components/schemas/TransferDirection"
        minTransferTime:
          type: integer
          format: int32
          description: Minimális átszállási idő.
          example: 120
        otherServiceDate:
          type: string
          description: Menetrendi nap
          example: "20241231"
        otherStopId:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        otherTripDesc:
          type: string
          description: A csatlakozó menet leírása, ha azt egy külső szolgáltató üzemelteti.
          example: IC Budapest 22:49
        otherTripId:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        otherTripTime:
          $ref: "#/components/schemas/TransitTransferStopTime"
        status:
          $ref: "#/components/schemas/TransferStatus"
        staySeated:
          type: boolean
          description: Igaz, ha a csatlakozásban szereplő menetek közötti átszálláshoz nem kell leszállni a járműről.
          example: true
        transferId:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
      required:
        - direction
        - minTransferTime
        - otherServiceDate
        - status
        - staySeated
        - transferId
    TransitTransferStopTime:
      type: object
      description: A másik menet érkezési vagy indulási ideje.
      example: 1625732820
      properties:
        predictedTime:
          type: integer
          format: int64
          description: A megállóhoz tartozó becsült idő epoch másodbercben, ha a járathoz van valós idejű adat.
          example: 1625732820
        scheduledTime:
          type: integer
          format: int64
          description: A megállóhoz tartozó tervezett idő epoch másodbercben.
          example: 1625732820
        stopHeadsign:
          type: string
          description: A megállóban kijelzett célállomás.
          example: Havanna utcai lakótelep
        uncertain:
          type: boolean
          description: Igaz, ha a menethez tartozó valós idejű adatok bizonytalanok.
          example: true
      required:
        - scheduledTime
    TransitTrip:
      type: object
      description: Menetek referenciáinak listája.
      properties:
        bikesAllowed:
          type: boolean
          description: Szállítható-e kerékpár a meneten.
          example: false
        blockId:
          type: string
          description: A menethez tartozó GTFS block_id, amennyiben létezik.
          example: C31350_3040_5_15
        directionId:
          type: string
          description: A menet irányának azonosítója.
          example: "1"
        id:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        routeId:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        serviceId:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        shapeId:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        tripHeadsign:
          type: string
          description: A menet célállomása.
          example: Széll Kálmán tér M
        tripShortName:
          type: string
          description: A menet rövid neve.
          example: "4"
        wheelchairAccessible:
          type: boolean
          description: Alacsonypadlós-e a menet.
          example: true
      required:
        - bikesAllowed
        - id
        - routeId
        - serviceId
        - shapeId
        - tripHeadsign
        - wheelchairAccessible
    TransitTripDetailsOTP:
      type: object
      description: A lekért adat.
      properties:
        alertIds:
          type: array
          description: Aktív zavarok a meneten.
          example:
            - BKK_bkkinfo-75685
          items:
            type: string
            description: Entitás azonosító
            example: BKK_DF544
        mayRequireBooking:
          type: boolean
          description: Igaz, ha a menet (legalább egy szakasza) foglalást igényel.
          example: true
        nextBlockTripId:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        polyline:
          $ref: "#/components/schemas/TransitPolyline"
        serviceDate:
          type: string
          description: Menetrendi nap
          example: "20241231"
        stopTimes:
          type: array
          description: Menet megállóinak listája.
          items:
            $ref: "#/components/schemas/TransitTripStopTime"
        tripId:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        vehicle:
          $ref: "#/components/schemas/TransitVehicle"
        vertex:
          type: string
          description: A menet utazástervező azonosítója, amelyet a `fromPlace` megadásához lehet használni.
          example: 20210708:BKK:AS4356
      required:
        - alertIds
        - mayRequireBooking
        - serviceDate
        - stopTimes
        - tripId
    TransitTripStopTime:
      type: object
      description: Menet megállóinak listája.
      properties:
        arrivalTime:
          type: integer
          format: int64
          description: A megállóba érkezés tervezett ideje epoch másodbercben. Az első megállónál hiányzik.
          example: 1625732820
        departureTime:
          type: integer
          format: int64
          description: A megállóból való indulás tervezett ideje epoch másodbercben. Az utolsó megállónál hiányzik.
          example: 1625732820
        dropOffAllowed:
          type: boolean
          description: Igaz, ha a megállóban engedélyezett-e a buszról való leszállás
          example: true
        pickupAllowed:
          type: boolean
          description: Igaz, ha a megállóban engedélyezett-e a buszra való felszállás
          example: true
        predictedArrivalTime:
          type: integer
          format: int64
          description: A megállóba érkezés becsült ideje epoch másodbercben, ha a járathoz van valós idejű adat. Az első megállónál hiányzik.
          example: 1625732820
        predictedDepartureTime:
          type: integer
          format: int64
          description: A megállóból való becsült indulás ideje epoch másodbercben, ha a járathoz van valós idejű adat. Az utolsó megállónál hiányzik.
          example: 1625732820
        predictionScheduled:
          type: boolean
          description: Igaz, ha a menetrendi bejegyzéshez tartozó megálló időpontja tervezett. API v5 óta.
          example: true
        requiresBooking:
          type: boolean
          description: Igaz, ha ez a megálló foglalást igényel.
          example: true
        shapeDistTraveled:
          type: number
          format: double
          description: Milyen messze található a megálló az elsőtől a minta mentén méterben.
          example: 935
        stopHeadsign:
          type: string
          description: A megállóban kijelzett célállomás.
          example: Havanna utcai lakótelep
        stopId:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        stopSequence:
          type: integer
          format: int32
          description: A menetrendi bejegyzéshez tartozó megálló sorszáma a meneten.
          example: 1
        transfers:
          type: array
          description: Menethez kapcsolódó csatlakozások ebben a megállóban.
          items:
            $ref: "#/components/schemas/TransitTransfer"
        uncertain:
          type: boolean
          description: Igaz, ha a menethez tartozó valós idejű adatok bizonytalanok.
          example: true
      required:
        - requiresBooking
        - stopHeadsign
        - stopId
    TransitVehicle:
      type: object
      description: A lekért adatok listája.
      properties:
        bearing:
          type: number
          format: float
          description: A jármű irányszöge.
          example: 97
        capacity:
          $ref: "#/components/schemas/TransitVehicleOccupancy"
        congestionLevel:
          $ref: "#/components/schemas/CongestionLevel"
        deviated:
          type: boolean
          description: Igaz, ha a jármű letért az útvonaláról.
          example: false
        label:
          type: string
          description: A jármű kijelzőjén megjelenő célállomáskép.
          example: Széll Kálmán tér M
        lastUpdateTime:
          type: integer
          format: int64
          description: A járműhöz tartozó utolsó valós idejű adat időbélyege másodpercben.
          example: 1625683727
        licensePlate:
          type: string
          description: A jármű rendszáma.
          example: V2035
        location:
          $ref: "#/components/schemas/TransitCoordinatePoint"
        model:
          type: string
          description: A jármű típusa.
          example: Siemens Combino
        occupancy:
          $ref: "#/components/schemas/TransitVehicleOccupancy"
        routeId:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        serviceDate:
          type: string
          description: Menetrendi nap
          example: "20241231"
        stale:
          type: boolean
          description: Igaz, ha a jármű pozíciója kiöregedett.
          example: false
        status:
          $ref: "#/components/schemas/VehicleStatus"
        stopDistancePercent:
          type: integer
          format: int32
          description: Hol tart a jármű a két megálló közti szakaszon, százalékban.
          example: 28
        stopId:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        stopSequence:
          type: integer
          format: int32
          description: A jármű által érintett aktuális megálló sorszáma a meneten.
          example: 1
        style:
          $ref: "#/components/schemas/TransitVehicleStyle"
        tripId:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        vehicleId:
          type: string
          description: Entitás azonosító
          example: BKK_DF544
        vehicleRouteType:
          type: string
          deprecated: true
          description: "A jármű fajtája. Deprecated: használjuk a `style` attribútumot."
          enum:
            - BICYCLE
            - CAR
            - WALK
            - BUS
            - CABLE_CAR
            - COACH
            - FERRY
            - FUNICULAR
            - GONDOLA
            - RAIL
            - SUBURBAN_RAILWAY
            - SUBWAY
            - TRAM
            - TROLLEYBUS
            - LOCAL
            - TRANSIT
          example: TRAM
        vertex:
          type: string
          description: A menet utazástervező azonosítója, amelyet a `fromPlace` megadásához lehet használni.
          example: 20210708:BKK:AS4356
        wheelchairAccessible:
          type: boolean
          description: Igaz, ha a jármű alacsonypadlós.
          example: true
      required:
        - congestionLevel
        - deviated
        - lastUpdateTime
        - location
        - vehicleId
        - wheelchairAccessible
    TransitVehicleOccupancy:
      type: object
      description: A jármű kapacitása.
      properties:
        adults:
          type: integer
          format: int32
          description: Hány felnőtt van a járművön.
          example: 350
        children:
          type: integer
          format: int32
          description: Hány gyermek van a járművön.
          example: 350
        other:
          type: integer
          format: int32
          description: Hány be nem kategorizált entitás van a járművön.
          example: 350
        strollers:
          type: integer
          format: int32
          description: Hány babakocsi van a járművön
          example: 350
        wheelchairs:
          type: integer
          format: int32
          description: Hány kerekesszék van a járművön.
          example: 350
    TransitVehicleStyle:
      type: object
      description: A járműhöz tartozó stílus.
      properties:
        color:
          type: string
          description: A járműhöz megjelenítendő ikon háttérszíne.
        icon:
          $ref: "#/components/schemas/TransitVehicleStyleIcon"
        textColor:
          type: string
          description: A járműhöz megjelenítendő ikon szövegszíne.
      required:
        - icon
    TransitVehicleStyleIcon:
      type: object
      description: A járathoz tartozó jármű ikon stílus.
      properties:
        color:
          type: string
          description: Az ikon elsődleges színe.
          example: eb4034
        name:
          type: string
          description: Az ikon neve.
          example: bus
        secondaryColor:
          type: string
          description: Az ikon másodlagos színe.
          example: eb4034
    TranslatedString:
      type: object
      description: Az adott járat leírása.
      properties:
        someTranslation:
          type: string
          description: A fordítás-összerendelések első eleme.
          example: English translation
        translations:
          type: object
          additionalProperties:
            type: string
            description: Lokalizáció és a hozzá tartozó fordítások összerendelése.
            example: "{\"en\":\"English translation\",\"hu\":\"Magyar fordítás\"}"
          description: Lokalizáció és a hozzá tartozó fordítások összerendelése.
          example:
            en: English translation
            hu: Magyar fordítás
      required:
        - translations
    TraverseMode:
      type: string
      description: A járat típusa.
      enum:
        - BICYCLE
        - CAR
        - WALK
        - BUS
        - CABLE_CAR
        - COACH
        - FERRY
        - FUNICULAR
        - GONDOLA
        - RAIL
        - SUBURBAN_RAILWAY
        - SUBWAY
        - TRAM
        - TROLLEYBUS
        - LOCAL
        - TRANSIT
      example: TRAM
    TripDetailsOTPMethodResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: A válasz státusz kódja.
          example: 200
        currentTime:
          type: integer
          format: int64
          description: Az aktuális szerveridő ezredmásodpercben.
          example: 1625747515786
        data:
          $ref: "#/components/schemas/TransitEntryWithReferencesTransitTripDetailsOTP"
        status:
          $ref: "#/components/schemas/Status"
        text:
          type: string
          description: A válasz szövege.
          example: OK
        version:
          type: integer
          format: int32
          description: A válasz API verziója.
          example: 3
      required:
        - code
        - currentTime
        - data
        - status
        - text
        - version
    TripPlan:
      type: object
      description: A tervezett útvonalak.
      properties:
        date:
          type: string
          format: date-time
          description: Az útvonal kezdete ezredmásodpercben.
        from:
          $ref: "#/components/schemas/Place"
        itineraries:
          type: array
          description: A talált útvonalak listája.
          items:
            $ref: "#/components/schemas/Itinerary"
        to:
          $ref: "#/components/schemas/Place"
      required:
        - date
        - from
        - itineraries
        - to
        - usePatterns
    VehicleForTripMethodResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: A válasz státusz kódja.
          example: 200
        currentTime:
          type: integer
          format: int64
          description: Az aktuális szerveridő ezredmásodpercben.
          example: 1625747515786
        data:
          $ref: "#/components/schemas/TransitListEntryWithReferencesTransitVehicle"
        status:
          $ref: "#/components/schemas/Status"
        text:
          type: string
          description: A válasz szövege.
          example: OK
        version:
          type: integer
          format: int32
          description: A válasz API verziója.
          example: 3
      required:
        - code
        - currentTime
        - data
        - status
        - text
        - version
    VehicleStatus:
      type: string
      description: A jármű állapota.
      enum:
        - INCOMING_AT
        - STOPPED_AT
        - IN_TRANSIT_TO
      example: IN_TRANSIT_TO
    VehiclesForLocationMethodResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: A válasz státusz kódja.
          example: 200
        currentTime:
          type: integer
          format: int64
          description: Az aktuális szerveridő ezredmásodpercben.
          example: 1625747515786
        data:
          $ref: "#/components/schemas/TransitListEntryWithReferencesTransitVehicle"
        status:
          $ref: "#/components/schemas/Status"
        text:
          type: string
          description: A válasz szövege.
          example: OK
        version:
          type: integer
          format: int32
          description: A válasz API verziója.
          example: 3
      required:
        - code
        - currentTime
        - data
        - status
        - text
        - version
    VehiclesForRouteMethodResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: A válasz státusz kódja.
          example: 200
        currentTime:
          type: integer
          format: int64
          description: Az aktuális szerveridő ezredmásodpercben.
          example: 1625747515786
        data:
          $ref: "#/components/schemas/TransitListEntryWithReferencesTransitVehicle"
        status:
          $ref: "#/components/schemas/Status"
        text:
          type: string
          description: A válasz szövege.
          example: OK
        version:
          type: integer
          format: int32
          description: A válasz API verziója.
          example: 3
      required:
        - code
        - currentTime
        - data
        - status
        - text
        - version
    VehiclesForStopMethodResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: A válasz státusz kódja.
          example: 200
        currentTime:
          type: integer
          format: int64
          description: Az aktuális szerveridő ezredmásodpercben.
          example: 1625747515786
        data:
          $ref: "#/components/schemas/TransitListEntryWithReferencesTransitVehicle"
        status:
          $ref: "#/components/schemas/Status"
        text:
          type: string
          description: A válasz szövege.
          example: OK
        version:
          type: integer
          format: int32
          description: A válasz API verziója.
          example: 3
      required:
        - code
        - currentTime
        - data
        - status
        - text
        - version
    VehiclesMethodResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: A válasz státusz kódja.
          example: 200
        currentTime:
          type: integer
          format: int64
          description: Az aktuális szerveridő ezredmásodpercben.
          example: 1625747515786
        data:
          $ref: "#/components/schemas/TransitListEntryWithReferencesTransitVehicle"
        status:
          $ref: "#/components/schemas/Status"
        text:
          type: string
          description: A válasz szövege.
          example: OK
        version:
          type: integer
          format: int32
          description: A válasz API verziója.
          example: 3
      required:
        - code
        - currentTime
        - data
        - status
        - text
        - version
    WaitTime:
      type: string
      description: A várakozási idő mennyiségi típusa a lábon.
      enum:
        - short
        - long
      example: short
    WalkDisplayedLeg:
      type: object
      allOf:
        - $ref: "#/components/schemas/DisplayedLeg"
      required:
        - name
        - time
        - type
        - walkTo
    WalkProfile:
      type: string
      default: MID
      enum:
        - SLOW
        - MID
        - FAST
    WalkStep:
      type: object
      description: Az útvonal lépései gyalogos, kerékpáros vagy autós láb lesetén.
      properties:
        absoluteDirection:
          $ref: "#/components/schemas/AbsoluteDirection"
        area:
          type: boolean
          description: "Jelzi, hogy a lépés egy nyílt terület, pl.: pláza, vagy vonat peron."
          example: true
        bicycleCategory:
          $ref: "#/components/schemas/BikeStreetCategory"
        bicycleStreetDirection:
          $ref: "#/components/schemas/BicycleStreetDirection"
        bogusName:
          type: boolean
          description: Jelzi, hogy az utca nevét a rendszer generálta.
          example: false
        distance:
          type: number
          format: double
          description: A lépés hossza méterben.
          example: 10.871
        geometry:
          $ref: "#/components/schemas/EncodedPolylineBean"
        lat:
          type: number
          format: double
          description: A lépés kezdetének szélességi koordinátája.
          example: 47.51758398883122
        lon:
          type: number
          format: double
          description: A lépés kezdetének hosszúsági koordinátája.
          example: 19.060103047839256
        relativeDirection:
          $ref: "#/components/schemas/RelativeDirection"
        stayOn:
          type: boolean
          description: Jelzi, hogy az utca irányt vált egy kereszteződésben.
          example: true
        streetName:
          type: string
          description: Az utca neve, amin a lépés halad.
          example: Lehel tér M
        walkingBike:
          type: boolean
          description: Jelzi, hogy a szakszon sétálni kell kerékpáros tervezés esetén.
          example: true
      required:
        - area
        - bogusName
        - distance
        - geometry
        - lat
        - lon
        - stayOn
        - streetName
  securitySchemes:
    ApiKeyQuery:
      description: A kliensalkalmazást azonosító API kulcs.
      in: query
      name: key
      type: apiKey
